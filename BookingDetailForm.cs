using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using QL_DatTiecNhaHang.QLDatTiecNhaHangDataSetTableAdapters;
using QL_DatTiecNhaHang.XMLClasses;
using DevExpress.XtraBars.Navigation;

namespace QL_DatTiecNhaHang
{
    public partial class BookingDetailForm : DevExpress.XtraEditors.XtraForm
    {

        DATTIECTableAdapter tableAdapter = new DATTIECTableAdapter();
        #region variable
        int slBan = 0; // so ban cua sanh tiec
        const int SL_KHACH_MOI_BAN = 10;
        List<string> listIDMonAn = new List<string>();
        List<string> listIDDoUong = new List<string>();
        List<string> listIDDichVu = new List<string>();
        #endregion


        public BookingDetailForm()
        {
            InitializeComponent();

            // This line of code is generated by Data Source Configuration Wizard
            dichvuTableAdapter1.Fill(qlDatTiecNhaHangDataSet1.DICHVU);
        }

        private void simpleButton4_Click(object sender, EventArgs e)
        {

        }

        private void BookingDetailForm_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'qLDatTiecNhaHangDataSet.DOUONG' table. You can move, or remove it, as needed.
            //this.dOUONGTableAdapter.Fill(this.qLDatTiecNhaHangDataSet.DOUONG);
            combO_MONANTableAdapter1.Fill(this.qLDatTiecNhaHangDataSet.COMBO_MONAN);
            loadCboHinhThucTiec();
            loadCboSanh();
            loadCboDaiDien();
            loadCboLoaiMA();
            loadDoUong();
            gridCBMA.Enabled = false;
            cboThoiGian.DateTime = GetCurrentDateTime();
            rdoTrua.Select();
            rdoTienMat.Select();


            btnDatNuoc.Text = "Đặt món";
            btnXoaNuocUong.Text = "Xóa món đã chọn";
            btnXoaAll.Text = "Xóa toàn bộ DS món";


                removeEvents();
                btnDatNuoc.Click += new EventHandler(btnDatMon_Click);
                btnXoaNuocUong.Click += new EventHandler(btnXoaDoAn_Click);
                btnXoaAll.Click += new EventHandler(btnXoaAll_MonAn_Click);



        }

        #region private function
        private void loadCboHinhThucTiec()
        {
            QLDatTiecNhaHangDataSet.LOAITIECDataTable dt = new QLDatTiecNhaHangDataSet.LOAITIECDataTable();
            loaitiecTableAdapter1.Fill(dt);
            cboHinhThucTiec.Properties.DataSource = dt;
            cboHinhThucTiec.Properties.ValueMember = "IdLT";
            cboHinhThucTiec.Properties.DisplayMember = "TenLT";
            cboHinhThucTiec.Properties.PopulateColumns();
            cboHinhThucTiec.Properties.Columns[0].Visible = false;
            cboHinhThucTiec.Properties.Columns[1].Caption = "Tên loại tiệc";
        }

        private void loadCboSanh()
        {
            QLDatTiecNhaHangDataSet.SANHTIECDataTable dt = new QLDatTiecNhaHangDataSet.SANHTIECDataTable();
            sanhtiecTableAdapter1.Fill(dt);
            cboSanh.Properties.DataSource = dt;
            cboSanh.Properties.ValueMember = "IdST";
            cboSanh.Properties.DisplayMember = "TenST";
            cboSanh.Properties.PopulateColumns();
            cboSanh.Properties.Columns[0].Visible = false;
            cboSanh.Properties.Columns[1].Caption = "Tên sảnh";
            cboSanh.Properties.Columns[2].Caption = "Tầng";
            cboSanh.Properties.Columns[3].Caption = "Tổng số bàn";
            cboSanh.Properties.Columns[4].Caption = "Giá mỗi bàn";
            cboSanh.Properties.Columns[5].Caption = "Giá bàn phát sinh";
            cboSanh.Properties.Columns[6].Caption = "Ghi chú";
        }

        private void tinhSLKhach_ban()
        {
            var soKhach = int.Parse(txtTongSoKhach.Text);
            // lay so khach moi ban, neu txtkhachban chua nhap hoac da nhap nhung  = 0 thi mac dinh
            var soKhach_Ban = 
                (string.IsNullOrEmpty(txtKhach_Ban.Text) || int.Parse(txtKhach_Ban.Text) == 0) ?
                SL_KHACH_MOI_BAN : int.Parse(txtKhach_Ban.Text);
            if (soKhach == 0)
                return;
            
            int temp = (soKhach / soKhach_Ban + (soKhach % soKhach_Ban == 0 ? 0 : 1));
            if (temp > slBan)
            {
                MessageBox.Show("Số lượng bàn đặt phải nhỏ hơn số bàn thực tế");
                return;
            }
            txtSoBan.Text = temp.ToString();
        }

        private void loadCboDaiDien()
        {
            QLDatTiecNhaHangDataSet.KHACHHANGDataTable dt = new QLDatTiecNhaHangDataSet.KHACHHANGDataTable();
            khachhangTableAdapter1.Fill(dt);
            cboDaiDien.Properties.DataSource = dt;
            cboDaiDien.Properties.ValueMember = "IdKH";
            cboDaiDien.Properties.DisplayMember = "HoTenKH";
            cboDaiDien.Properties.PopulateColumns();
            cboDaiDien.Properties.Columns[0].Visible = false;
            cboDaiDien.Properties.Columns[1].Caption = "Tên khách hàng";
            cboDaiDien.Properties.Columns[2].Caption = "Ngày sinh";
            cboDaiDien.Properties.Columns[3].Caption = "Giới tính";
            cboDaiDien.Properties.Columns[4].Caption = "Địa chỉ";
            cboDaiDien.Properties.Columns[5].Caption = "SĐT";
            cboDaiDien.Properties.Columns[6].Caption = "Email";
            cboDaiDien.Properties.Columns[7].Caption = "Ghi chú";
        }


        private void loadCboLoaiMA()
        {
            QLDatTiecNhaHangDataSet.LOAIMONANDataTable dt = new QLDatTiecNhaHangDataSet.LOAIMONANDataTable();
            loaimonanTableAdapter1.Fill(dt);
            cboLoaiMonAn.Properties.DataSource = dt;
            cboLoaiMonAn.Properties.ValueMember = "IdLMA";
            cboLoaiMonAn.Properties.DisplayMember = "TenLMA";
            //cboLoaiMonAn.Properties.PopulateColumns();
            cboLoaiMonAn.Properties.Columns[0].Visible = false;
            cboLoaiMonAn.Properties.Columns[1].Caption = "Tên loại món";
            cboLoaiMonAn.Properties.Columns[2].Caption = "Ghi chú";
        }

        private void loadChiTietMonAnTheoLoai(int maLMA)
        {
            QLDatTiecNhaHangDataSet.MONANDataTable dt = new QLDatTiecNhaHangDataSet.MONANDataTable();
            dt = monanTableAdapter1.SelectMonAnTheoLoai(maLMA);
            //monanTableAdapter1.Fill(dt);
            gridThucAn.DataSource = dt;
        }

        private void loadChiTietMonAnTheoCombo(int maCB)
        {
            QLDatTiecNhaHangDataSet.MONANDataTable dt = new QLDatTiecNhaHangDataSet.MONANDataTable();
            dt = monanTableAdapter1.SelectMonAnTheoCombo(maCB);
            //monanTableAdapter1.Fill(dt);
            gridThucAn.DataSource = dt;
        }

        private void loadDoUong()
        {
            QLDatTiecNhaHangDataSet.DOUONGDataTable dt =new QLDatTiecNhaHangDataSet.DOUONGDataTable();
            douongTableAdapter1.Fill(dt);
            gridDoUong.DataSource = dt;
        }


        private DateTime GetCurrentDateTime()
        {
            return DateTime.Today;
        }

        private string CurrentDateToShowDateString()
        {
            return GetCurrentDateTime().ToShortDateString();
        }
        #endregion

        private void lookUpEdit1_EditValueChanged(object sender, EventArgs e)
        {
            slBan = int.Parse(((LookUpEdit)sender).GetColumnValue("SoBan").ToString());
        }

        private void groupBox4_Enter(object sender, EventArgs e)
        {

        }

        private void txtTongSoKhach_EditValueChanged(object sender, EventArgs e)
        {
            if (string.IsNullOrEmpty(txtTongSoKhach.Text))
                return;
            tinhSLKhach_ban();
        }

        private void txtKhach_Ban_EditValueChanged(object sender, EventArgs e)
        {
            tinhSLKhach_ban();
        }

        private void cboDaiDien_EditValueChanged(object sender, EventArgs e)
        {
            txtSDT.Text = ((LookUpEdit)sender).GetColumnValue("DienThoaiKH").ToString();
            txtEmail.Text = ((LookUpEdit)sender).GetColumnValue("EmailKH").ToString();
            txtDiaChi.Text = ((LookUpEdit)sender).GetColumnValue("DiaChiKH").ToString();
        }

        private void xtraTabControl1_Click(object sender, EventArgs e)
        {

        }

        private void chkCheck_CheckedChanged(object sender, EventArgs e)
        {
            if(chkCheck.Checked)
            {
                cboLoaiMonAn.Enabled = false;
                gridCBMA.Enabled = true;
                //load theo combo mon an, select *
            }
            else
            {
                cboLoaiMonAn.Enabled = true;
                gridCBMA.Enabled = false;
                // load theo cboloaima
            }
        }

        private void grvCBMA_SelectionChanged(object sender, DevExpress.Data.SelectionChangedEventArgs e)
        {
            
        }

        private void grvCBMA_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            var x = ((DataRowView)grvCBMA.GetRow(grvCBMA.GetSelectedRows()[0]))["IdCBMA"];
            if (x == null)
                return;
            loadChiTietMonAnTheoCombo((int)x);
        }

        private void cboLoaiMonAn_EditValueChanged(object sender, EventArgs e)
        {
            loadChiTietMonAnTheoLoai(int.Parse(cboLoaiMonAn.EditValue.ToString()));
        }

        private void btnDatNuoc_Click(object sender, EventArgs e)
        {
            var rows = grvDoUong.GetSelectedRows();
            foreach (var item in rows)
            {
                //lstDoUongDD.Items.Add(grvDoUong.GetDataRow(item).ItemArray);
                addNewItem(lstDoUongDD, listIDDoUong, grvDoUong.GetDataRow(item));
            }
        }

        private void btnDatMon_Click(object sender, EventArgs e)
        {
            var rows = grvMonAn.GetSelectedRows();
            foreach (var item in rows)
            {
                //lstDoUongDD.Items.Add(grvDoUong.GetDataRow(item).ItemArray);
                addNewItem(lstDoAnDD, listIDMonAn, grvMonAn.GetDataRow(item));
            }
        }

        private void btnDatDichVu_Click(object sender, EventArgs e)
        {
            var rows = grvDichVu.GetSelectedRows();
            foreach (var item in rows)
            {
                //lstDoUongDD.Items.Add(grvDoUong.GetDataRow(item).ItemArray);
                addNewItem(lstDichVuDD, listIDDichVu, grvDichVu.GetDataRow(item));
            }
        }

        private void addNewItem(ListView list, List<string> listid, DataRow dr)
        {
            
            ListViewItem item = new ListViewItem();
            if(listid.IndexOf(dr[0].ToString()) >= 0)
            {
                MessageBox.Show("Đã có id trong danh sách");
                return;
            }
               
            listid.Add(dr[0].ToString());
            item.Text = (list.Items.Count + 1).ToString();

            for (int i = 0; i < list.Columns.Count; i++)
            {
                item.SubItems.Add(new ListViewItem.ListViewSubItem() { Text = dr[i+1].ToString() }) ;
            }

            list.Items.Add(item);
        }

        private void btnXoaAll_Click(object sender, EventArgs e)
        {
            lstDoUongDD.Items.Clear();
            listIDDoUong.Clear();
        }

        private void btnXoaAll_MonAn_Click(object sender, EventArgs e)
        {
            lstDoAnDD.Items.Clear();
            listIDMonAn.Clear();
        }

        private void btnXoaAll_DichVu_Click(object sender, EventArgs e)
        {
            lstDichVuDD.Items.Clear();
            listIDDichVu.Clear();
        }

        private void btnXoaNuocUong_Click(object sender, EventArgs e)
        {
            if(lstDoUongDD.SelectedItems.Count <= 0)
                return;
            foreach (ListViewItem item in lstDoUongDD.SelectedItems)
            {
                listIDDoUong.RemoveAt(lstDoUongDD.Items.IndexOf(item));
                lstDoUongDD.Items.Remove(item);
            }
            updateSTT(lstDoUongDD);
        }

        private void btnXoaDoAn_Click(object sender, EventArgs e)
        {
            if (lstDoAnDD.SelectedItems.Count <= 0)
                return;
            foreach (ListViewItem item in lstDoAnDD.SelectedItems)
            {
                listIDMonAn.RemoveAt(lstDoAnDD.Items.IndexOf(item));
                lstDoAnDD.Items.Remove(item);
            }
            updateSTT(lstDoAnDD);
        }

        private void btnXoaDichVu_Click(object sender, EventArgs e)
        {
            if (lstDichVuDD.SelectedItems.Count <= 0)
                return;
            foreach (ListViewItem item in lstDichVuDD.SelectedItems)
            {
                listIDDichVu.RemoveAt(lstDichVuDD.Items.IndexOf(item));
                lstDichVuDD.Items.Remove(item);
            }
            updateSTT(lstDichVuDD);
        }

        private void updateSTT(ListView list)
        {
            for (int i = 0; i < list.Items.Count; i++)
            {
                list.Items[i].Text = (i + 1).ToString();
            }
        }

        private void tab_Click(object sender, EventArgs e)
        {
            setValueButton(tabDaDat);
            tabChon.SelectedPage = (TabNavigationPage)tabChon.Pages[tabDaDat.SelectedPageIndex];
        }

        private void setValueButton(TabPane tab)
        {
            if (tab.SelectedPage == tab.Pages[0]) // neu chon tab do an da dat
            {
                btnDatNuoc.Text = "Đặt món";
                btnXoaNuocUong.Text = "Xóa món đã chọn";
                btnXoaAll.Text = "Xóa toàn bộ DS món";

                //if (tabDaDat.Pages[0].Tag == null)
                //{
                    removeEvents();
                    btnDatNuoc.Click += new EventHandler(btnDatMon_Click);
                    btnXoaNuocUong.Click += new EventHandler(btnXoaDoAn_Click);
                    btnXoaAll.Click += new EventHandler(btnXoaAll_MonAn_Click);

                    tabDaDat.Pages[0].Tag = true;
                //}
            }
            else if (tab.SelectedPage == tab.Pages[1])
            {
                btnDatNuoc.Text = "Đặt nước uống";
                btnXoaNuocUong.Text = "Xóa nước uống đã chọn";
                btnXoaAll.Text = "Xóa toàn bộ DS nước";


                //if (tabDaDat.Pages[1].Tag == null)
                //{
                    removeEvents();
                    btnDatNuoc.Click += new EventHandler(btnDatNuoc_Click);
                    btnXoaNuocUong.Click += new EventHandler(btnXoaNuocUong_Click);
                    btnXoaAll.Click += new EventHandler(btnXoaAll_Click);


                    tabDaDat.Pages[1].Tag = true;
                //}
            }
            else
            {
                btnDatNuoc.Text = "Đặt dịch vụ";
                btnXoaNuocUong.Text = "Xóa dịch vụ đã chọn";
                btnXoaAll.Text = "Xóa toàn bộ DS dịch vụ";


                //if (tabDaDat.Pages[2].Tag == null)
                //{
                    removeEvents();
                    btnDatNuoc.Click += new EventHandler(btnDatDichVu_Click);
                    btnXoaNuocUong.Click += new EventHandler(btnXoaDichVu_Click);
                    btnXoaAll.Click += new EventHandler(btnXoaAll_DichVu_Click);

                    tabDaDat.Pages[2].Tag = true;
                //}
            }
        }

        private void removeEvents()
        {
            btnDatNuoc.Click -= btnDatNuoc_Click;
            btnXoaNuocUong.Click -= btnXoaNuocUong_Click;
            btnXoaAll.Click -= btnXoaAll_Click;

            btnDatNuoc.Click -= btnDatMon_Click;
            btnXoaNuocUong.Click -= btnXoaDoAn_Click;
            btnXoaAll.Click -= btnXoaAll_MonAn_Click;

            btnDatNuoc.Click -= btnDatDichVu_Click;
            btnXoaNuocUong.Click -= btnXoaDichVu_Click;
            btnXoaAll.Click -= btnXoaAll_DichVu_Click;
        }
        private void btnDatCoc_Click(object sender, EventArgs e)
        {
            var listDSMA = new List<XMLMonAn>();
            foreach (ListViewItem item in lstDoAnDD.Items)
            {
                listDSMA.Add(new XMLMonAn() {
                    IdMA = int.Parse(item.SubItems[0].Text),
                    TenMA = item.SubItems[1].Text
                });
            }
            var x = XMLMonAn.ToXML(listDSMA);
            txtGhiChuKH.Text = x;
        }

        private void tabChonNuocUong_SelectedPageChanged(object sender, DevExpress.XtraBars.Navigation.SelectedPageChangedEventArgs e)
        {
            //tabDaDat.SelectedPage = (TabNavigationPage)tabDaDat.Pages[tabChon.SelectedPageIndex];
            
        }

        private void tabChon_SelectedPageChanging(object sender, DevExpress.XtraBars.Navigation.SelectedPageChangingEventArgs e)
        {
            //tabDaDat.SelectedPage = (TabNavigationPage)tabDaDat.Pages[tabChon.SelectedPageIndex];
            //MessageBox.Show(tabChon.SelectedPageIndex.ToString());
        }

        private void tabDaDat_SelectedPageChanging(object sender, SelectedPageChangingEventArgs e)
        {
            //tabChon.SelectedPage = (TabNavigationPage)tabChon.Pages[tabDaDat.SelectedPageIndex];
            //MessageBox.Show(tabDaDat.SelectedPageIndex.ToString());
        }

        private void tabChon_Click(object sender, EventArgs e)
        {
            setValueButton(tabChon);
            tabDaDat.SelectedPage = (TabNavigationPage)tabDaDat.Pages[tabChon.SelectedPageIndex];
        }

        private void btnLuu_Click(object sender, EventArgs e)
        {
            var idKH = cboDaiDien.GetColumnValue("IdKH").ToString();
            var idLT = cboHinhThucTiec.GetColumnValue("IdLT").ToString();

            var listDSMA = new List<XMLMonAn>();
            foreach (ListViewItem item in lstDoAnDD.Items)
            {
                listDSMA.Add(new XMLMonAn()
                {
                    IdMA = int.Parse(item.SubItems[0].Text),
                    TenMA = item.SubItems[1].Text
                });
            }
            var xmlDSMA = XMLMonAn.ToXML(listDSMA);
            //================================================
            var listDSDU = new List<XMLDoUong>();
            foreach (ListViewItem item in lstDoUongDD.Items)
            {
                listDSDU.Add(new XMLDoUong()
                {
                    IdDU = int.Parse(item.SubItems[0].Text),
                    TenDU = item.SubItems[1].Text
                });
            }
            var xmlDSDU = XMLDoUong.ToXML(listDSDU);
            //================================================
            var listDSDV = new List<XMLDichVu>();
            foreach (ListViewItem item in lstDichVuDD.Items)
            {
                listDSDV.Add(new XMLDichVu()
                {
                    IdDV = int.Parse(item.SubItems[0].Text),
                    TenDV = item.SubItems[1].Text
                });
            }
            var xmlDSDV = XMLDichVu.ToXML(listDSDV);
            //================================================
            var result = tableAdapter.DATTIEC_Ins(int.Parse(idKH), int.Parse(idLT), DateTime.Now, txtTenChuRe.Text, txtTenCoDau.Text,
                int.Parse(txtTongSoKhach.Text), int.Parse(txtSoBan.Text),  100, DateTime.Parse(cboThoiGian.EditValue.ToString()), txtGhiChu.Text,
                xmlDSMA, xmlDSDU, xmlDSDV);

            MessageBox.Show(result.ToString());
        }

        
    }
}