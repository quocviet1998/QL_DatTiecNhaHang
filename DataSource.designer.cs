#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QL_DatTiecNhaHang
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLDatTiecNhaHang")]
	public partial class DataSourceDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBOPHAN(BOPHAN instance);
    partial void UpdateBOPHAN(BOPHAN instance);
    partial void DeleteBOPHAN(BOPHAN instance);
    partial void InsertCOMBO_MONAN(COMBO_MONAN instance);
    partial void UpdateCOMBO_MONAN(COMBO_MONAN instance);
    partial void DeleteCOMBO_MONAN(COMBO_MONAN instance);
    partial void InsertCT_DT_DU(CT_DT_DU instance);
    partial void UpdateCT_DT_DU(CT_DT_DU instance);
    partial void DeleteCT_DT_DU(CT_DT_DU instance);
    partial void InsertLOAIMONAN(LOAIMONAN instance);
    partial void UpdateLOAIMONAN(LOAIMONAN instance);
    partial void DeleteLOAIMONAN(LOAIMONAN instance);
    partial void InsertCT_DT_DV(CT_DT_DV instance);
    partial void UpdateCT_DT_DV(CT_DT_DV instance);
    partial void DeleteCT_DT_DV(CT_DT_DV instance);
    partial void InsertCT_DT_MA(CT_DT_MA instance);
    partial void UpdateCT_DT_MA(CT_DT_MA instance);
    partial void DeleteCT_DT_MA(CT_DT_MA instance);
    partial void InsertCT_DT_NV(CT_DT_NV instance);
    partial void UpdateCT_DT_NV(CT_DT_NV instance);
    partial void DeleteCT_DT_NV(CT_DT_NV instance);
    partial void InsertCT_DT_ST(CT_DT_ST instance);
    partial void UpdateCT_DT_ST(CT_DT_ST instance);
    partial void DeleteCT_DT_ST(CT_DT_ST instance);
    partial void InsertCT_MA_CBMA(CT_MA_CBMA instance);
    partial void UpdateCT_MA_CBMA(CT_MA_CBMA instance);
    partial void DeleteCT_MA_CBMA(CT_MA_CBMA instance);
    partial void InsertCT_ND_NND(CT_ND_NND instance);
    partial void UpdateCT_ND_NND(CT_ND_NND instance);
    partial void DeleteCT_ND_NND(CT_ND_NND instance);
    partial void InsertCT_PHATSINH(CT_PHATSINH instance);
    partial void UpdateCT_PHATSINH(CT_PHATSINH instance);
    partial void DeleteCT_PHATSINH(CT_PHATSINH instance);
    partial void InsertDATTIEC(DATTIEC instance);
    partial void UpdateDATTIEC(DATTIEC instance);
    partial void DeleteDATTIEC(DATTIEC instance);
    partial void InsertDICHVU(DICHVU instance);
    partial void UpdateDICHVU(DICHVU instance);
    partial void DeleteDICHVU(DICHVU instance);
    partial void InsertDODUNG(DODUNG instance);
    partial void UpdateDODUNG(DODUNG instance);
    partial void DeleteDODUNG(DODUNG instance);
    partial void InsertDOUONG(DOUONG instance);
    partial void UpdateDOUONG(DOUONG instance);
    partial void DeleteDOUONG(DOUONG instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLOAIDOUONG(LOAIDOUONG instance);
    partial void UpdateLOAIDOUONG(LOAIDOUONG instance);
    partial void DeleteLOAIDOUONG(LOAIDOUONG instance);
    partial void InsertLOAITIEC(LOAITIEC instance);
    partial void UpdateLOAITIEC(LOAITIEC instance);
    partial void DeleteLOAITIEC(LOAITIEC instance);
    partial void InsertMANHINH(MANHINH instance);
    partial void UpdateMANHINH(MANHINH instance);
    partial void DeleteMANHINH(MANHINH instance);
    partial void InsertMONAN(MONAN instance);
    partial void UpdateMONAN(MONAN instance);
    partial void DeleteMONAN(MONAN instance);
    partial void InsertNGUOIDUNG(NGUOIDUNG instance);
    partial void UpdateNGUOIDUNG(NGUOIDUNG instance);
    partial void DeleteNGUOIDUNG(NGUOIDUNG instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertNHOMNGUOIDUNG(NHOMNGUOIDUNG instance);
    partial void UpdateNHOMNGUOIDUNG(NHOMNGUOIDUNG instance);
    partial void DeleteNHOMNGUOIDUNG(NHOMNGUOIDUNG instance);
    partial void InsertPHANQUYEN(PHANQUYEN instance);
    partial void UpdatePHANQUYEN(PHANQUYEN instance);
    partial void DeletePHANQUYEN(PHANQUYEN instance);
    partial void InsertSANHTIEC(SANHTIEC instance);
    partial void UpdateSANHTIEC(SANHTIEC instance);
    partial void DeleteSANHTIEC(SANHTIEC instance);
    #endregion
		
		public DataSourceDataContext() : 
				base(global::QL_DatTiecNhaHang.Properties.Settings.Default.QLDatTiecNhaHangConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataSourceDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataSourceDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataSourceDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataSourceDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BOPHAN> BOPHANs
		{
			get
			{
				return this.GetTable<BOPHAN>();
			}
		}
		
		public System.Data.Linq.Table<COMBO_MONAN> COMBO_MONANs
		{
			get
			{
				return this.GetTable<COMBO_MONAN>();
			}
		}
		
		public System.Data.Linq.Table<CT_DT_DU> CT_DT_DUs
		{
			get
			{
				return this.GetTable<CT_DT_DU>();
			}
		}
		
		public System.Data.Linq.Table<LOAIMONAN> LOAIMONANs
		{
			get
			{
				return this.GetTable<LOAIMONAN>();
			}
		}
		
		public System.Data.Linq.Table<CT_DT_DV> CT_DT_DVs
		{
			get
			{
				return this.GetTable<CT_DT_DV>();
			}
		}
		
		public System.Data.Linq.Table<CT_DT_MA> CT_DT_MAs
		{
			get
			{
				return this.GetTable<CT_DT_MA>();
			}
		}
		
		public System.Data.Linq.Table<CT_DT_NV> CT_DT_NVs
		{
			get
			{
				return this.GetTable<CT_DT_NV>();
			}
		}
		
		public System.Data.Linq.Table<CT_DT_ST> CT_DT_STs
		{
			get
			{
				return this.GetTable<CT_DT_ST>();
			}
		}
		
		public System.Data.Linq.Table<CT_MA_CBMA> CT_MA_CBMAs
		{
			get
			{
				return this.GetTable<CT_MA_CBMA>();
			}
		}
		
		public System.Data.Linq.Table<CT_ND_NND> CT_ND_NNDs
		{
			get
			{
				return this.GetTable<CT_ND_NND>();
			}
		}
		
		public System.Data.Linq.Table<CT_PHATSINH> CT_PHATSINHs
		{
			get
			{
				return this.GetTable<CT_PHATSINH>();
			}
		}
		
		public System.Data.Linq.Table<DATTIEC> DATTIECs
		{
			get
			{
				return this.GetTable<DATTIEC>();
			}
		}
		
		public System.Data.Linq.Table<DICHVU> DICHVUs
		{
			get
			{
				return this.GetTable<DICHVU>();
			}
		}
		
		public System.Data.Linq.Table<DODUNG> DODUNGs
		{
			get
			{
				return this.GetTable<DODUNG>();
			}
		}
		
		public System.Data.Linq.Table<DOUONG> DOUONGs
		{
			get
			{
				return this.GetTable<DOUONG>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAIDOUONG> LOAIDOUONGs
		{
			get
			{
				return this.GetTable<LOAIDOUONG>();
			}
		}
		
		public System.Data.Linq.Table<LOAITIEC> LOAITIECs
		{
			get
			{
				return this.GetTable<LOAITIEC>();
			}
		}
		
		public System.Data.Linq.Table<MANHINH> MANHINHs
		{
			get
			{
				return this.GetTable<MANHINH>();
			}
		}
		
		public System.Data.Linq.Table<MONAN> MONANs
		{
			get
			{
				return this.GetTable<MONAN>();
			}
		}
		
		public System.Data.Linq.Table<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this.GetTable<NGUOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<NHOMNGUOIDUNG> NHOMNGUOIDUNGs
		{
			get
			{
				return this.GetTable<NHOMNGUOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this.GetTable<PHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<SANHTIEC> SANHTIECs
		{
			get
			{
				return this.GetTable<SANHTIEC>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BOPHAN")]
	public partial class BOPHAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdBP;
		
		private string _TenBP;
		
		private string _GhiChu;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBPChanging(int value);
    partial void OnIdBPChanged();
    partial void OnTenBPChanging(string value);
    partial void OnTenBPChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public BOPHAN()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdBP
		{
			get
			{
				return this._IdBP;
			}
			set
			{
				if ((this._IdBP != value))
				{
					this.OnIdBPChanging(value);
					this.SendPropertyChanging();
					this._IdBP = value;
					this.SendPropertyChanged("IdBP");
					this.OnIdBPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBP", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenBP
		{
			get
			{
				return this._TenBP;
			}
			set
			{
				if ((this._TenBP != value))
				{
					this.OnTenBPChanging(value);
					this.SendPropertyChanging();
					this._TenBP = value;
					this.SendPropertyChanged("TenBP");
					this.OnTenBPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BOPHAN_NHANVIEN", Storage="_NHANVIENs", ThisKey="IdBP", OtherKey="IdBP")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.BOPHAN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.BOPHAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COMBO_MONAN")]
	public partial class COMBO_MONAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCBMA;
		
		private string _GhiChu;
		
		private EntitySet<CT_MA_CBMA> _CT_MA_CBMAs;
		
		private EntitySet<DATTIEC> _DATTIECs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCBMAChanging(int value);
    partial void OnIdCBMAChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public COMBO_MONAN()
		{
			this._CT_MA_CBMAs = new EntitySet<CT_MA_CBMA>(new Action<CT_MA_CBMA>(this.attach_CT_MA_CBMAs), new Action<CT_MA_CBMA>(this.detach_CT_MA_CBMAs));
			this._DATTIECs = new EntitySet<DATTIEC>(new Action<DATTIEC>(this.attach_DATTIECs), new Action<DATTIEC>(this.detach_DATTIECs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCBMA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCBMA
		{
			get
			{
				return this._IdCBMA;
			}
			set
			{
				if ((this._IdCBMA != value))
				{
					this.OnIdCBMAChanging(value);
					this.SendPropertyChanging();
					this._IdCBMA = value;
					this.SendPropertyChanged("IdCBMA");
					this.OnIdCBMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COMBO_MONAN_CT_MA_CBMA", Storage="_CT_MA_CBMAs", ThisKey="IdCBMA", OtherKey="IdCBMA")]
		public EntitySet<CT_MA_CBMA> CT_MA_CBMAs
		{
			get
			{
				return this._CT_MA_CBMAs;
			}
			set
			{
				this._CT_MA_CBMAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COMBO_MONAN_DATTIEC", Storage="_DATTIECs", ThisKey="IdCBMA", OtherKey="IdCBMA")]
		public EntitySet<DATTIEC> DATTIECs
		{
			get
			{
				return this._DATTIECs;
			}
			set
			{
				this._DATTIECs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_MA_CBMAs(CT_MA_CBMA entity)
		{
			this.SendPropertyChanging();
			entity.COMBO_MONAN = this;
		}
		
		private void detach_CT_MA_CBMAs(CT_MA_CBMA entity)
		{
			this.SendPropertyChanging();
			entity.COMBO_MONAN = null;
		}
		
		private void attach_DATTIECs(DATTIEC entity)
		{
			this.SendPropertyChanging();
			entity.COMBO_MONAN = this;
		}
		
		private void detach_DATTIECs(DATTIEC entity)
		{
			this.SendPropertyChanging();
			entity.COMBO_MONAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DT_DU")]
	public partial class CT_DT_DU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDT;
		
		private int _IdDU;
		
		private System.Nullable<int> _SL_DU;
		
		private System.Nullable<int> _SL_DU_PS;
		
		private EntityRef<DATTIEC> _DATTIEC;
		
		private EntityRef<DOUONG> _DOUONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDTChanging(int value);
    partial void OnIdDTChanged();
    partial void OnIdDUChanging(int value);
    partial void OnIdDUChanged();
    partial void OnSL_DUChanging(System.Nullable<int> value);
    partial void OnSL_DUChanged();
    partial void OnSL_DU_PSChanging(System.Nullable<int> value);
    partial void OnSL_DU_PSChanged();
    #endregion
		
		public CT_DT_DU()
		{
			this._DATTIEC = default(EntityRef<DATTIEC>);
			this._DOUONG = default(EntityRef<DOUONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdDT
		{
			get
			{
				return this._IdDT;
			}
			set
			{
				if ((this._IdDT != value))
				{
					if (this._DATTIEC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDTChanging(value);
					this.SendPropertyChanging();
					this._IdDT = value;
					this.SendPropertyChanged("IdDT");
					this.OnIdDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDU", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdDU
		{
			get
			{
				return this._IdDU;
			}
			set
			{
				if ((this._IdDU != value))
				{
					if (this._DOUONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDUChanging(value);
					this.SendPropertyChanging();
					this._IdDU = value;
					this.SendPropertyChanged("IdDU");
					this.OnIdDUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_DU", DbType="Int")]
		public System.Nullable<int> SL_DU
		{
			get
			{
				return this._SL_DU;
			}
			set
			{
				if ((this._SL_DU != value))
				{
					this.OnSL_DUChanging(value);
					this.SendPropertyChanging();
					this._SL_DU = value;
					this.SendPropertyChanged("SL_DU");
					this.OnSL_DUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_DU_PS", DbType="Int")]
		public System.Nullable<int> SL_DU_PS
		{
			get
			{
				return this._SL_DU_PS;
			}
			set
			{
				if ((this._SL_DU_PS != value))
				{
					this.OnSL_DU_PSChanging(value);
					this.SendPropertyChanging();
					this._SL_DU_PS = value;
					this.SendPropertyChanged("SL_DU_PS");
					this.OnSL_DU_PSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATTIEC_CT_DT_DU", Storage="_DATTIEC", ThisKey="IdDT", OtherKey="IdDT", IsForeignKey=true)]
		public DATTIEC DATTIEC
		{
			get
			{
				return this._DATTIEC.Entity;
			}
			set
			{
				DATTIEC previousValue = this._DATTIEC.Entity;
				if (((previousValue != value) 
							|| (this._DATTIEC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DATTIEC.Entity = null;
						previousValue.CT_DT_DUs.Remove(this);
					}
					this._DATTIEC.Entity = value;
					if ((value != null))
					{
						value.CT_DT_DUs.Add(this);
						this._IdDT = value.IdDT;
					}
					else
					{
						this._IdDT = default(int);
					}
					this.SendPropertyChanged("DATTIEC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOUONG_CT_DT_DU", Storage="_DOUONG", ThisKey="IdDU", OtherKey="IdDU", IsForeignKey=true)]
		public DOUONG DOUONG
		{
			get
			{
				return this._DOUONG.Entity;
			}
			set
			{
				DOUONG previousValue = this._DOUONG.Entity;
				if (((previousValue != value) 
							|| (this._DOUONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOUONG.Entity = null;
						previousValue.CT_DT_DUs.Remove(this);
					}
					this._DOUONG.Entity = value;
					if ((value != null))
					{
						value.CT_DT_DUs.Add(this);
						this._IdDU = value.IdDU;
					}
					else
					{
						this._IdDU = default(int);
					}
					this.SendPropertyChanged("DOUONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIMONAN")]
	public partial class LOAIMONAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdLMA;
		
		private string _TenLMA;
		
		private string _GhiChu;
		
		private EntitySet<MONAN> _MONANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdLMAChanging(int value);
    partial void OnIdLMAChanged();
    partial void OnTenLMAChanging(string value);
    partial void OnTenLMAChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public LOAIMONAN()
		{
			this._MONANs = new EntitySet<MONAN>(new Action<MONAN>(this.attach_MONANs), new Action<MONAN>(this.detach_MONANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLMA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdLMA
		{
			get
			{
				return this._IdLMA;
			}
			set
			{
				if ((this._IdLMA != value))
				{
					this.OnIdLMAChanging(value);
					this.SendPropertyChanging();
					this._IdLMA = value;
					this.SendPropertyChanged("IdLMA");
					this.OnIdLMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLMA", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenLMA
		{
			get
			{
				return this._TenLMA;
			}
			set
			{
				if ((this._TenLMA != value))
				{
					this.OnTenLMAChanging(value);
					this.SendPropertyChanging();
					this._TenLMA = value;
					this.SendPropertyChanged("TenLMA");
					this.OnTenLMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIMONAN_MONAN", Storage="_MONANs", ThisKey="IdLMA", OtherKey="IdLMA")]
		public EntitySet<MONAN> MONANs
		{
			get
			{
				return this._MONANs;
			}
			set
			{
				this._MONANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MONANs(MONAN entity)
		{
			this.SendPropertyChanging();
			entity.LOAIMONAN = this;
		}
		
		private void detach_MONANs(MONAN entity)
		{
			this.SendPropertyChanging();
			entity.LOAIMONAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DT_DV")]
	public partial class CT_DT_DV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDV;
		
		private int _IdDT;
		
		private EntityRef<DATTIEC> _DATTIEC;
		
		private EntityRef<DICHVU> _DICHVU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDVChanging(int value);
    partial void OnIdDVChanged();
    partial void OnIdDTChanging(int value);
    partial void OnIdDTChanged();
    #endregion
		
		public CT_DT_DV()
		{
			this._DATTIEC = default(EntityRef<DATTIEC>);
			this._DICHVU = default(EntityRef<DICHVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdDV
		{
			get
			{
				return this._IdDV;
			}
			set
			{
				if ((this._IdDV != value))
				{
					if (this._DICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDVChanging(value);
					this.SendPropertyChanging();
					this._IdDV = value;
					this.SendPropertyChanged("IdDV");
					this.OnIdDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdDT
		{
			get
			{
				return this._IdDT;
			}
			set
			{
				if ((this._IdDT != value))
				{
					if (this._DATTIEC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDTChanging(value);
					this.SendPropertyChanging();
					this._IdDT = value;
					this.SendPropertyChanged("IdDT");
					this.OnIdDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATTIEC_CT_DT_DV", Storage="_DATTIEC", ThisKey="IdDT", OtherKey="IdDT", IsForeignKey=true)]
		public DATTIEC DATTIEC
		{
			get
			{
				return this._DATTIEC.Entity;
			}
			set
			{
				DATTIEC previousValue = this._DATTIEC.Entity;
				if (((previousValue != value) 
							|| (this._DATTIEC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DATTIEC.Entity = null;
						previousValue.CT_DT_DVs.Remove(this);
					}
					this._DATTIEC.Entity = value;
					if ((value != null))
					{
						value.CT_DT_DVs.Add(this);
						this._IdDT = value.IdDT;
					}
					else
					{
						this._IdDT = default(int);
					}
					this.SendPropertyChanged("DATTIEC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_CT_DT_DV", Storage="_DICHVU", ThisKey="IdDV", OtherKey="IdDV", IsForeignKey=true)]
		public DICHVU DICHVU
		{
			get
			{
				return this._DICHVU.Entity;
			}
			set
			{
				DICHVU previousValue = this._DICHVU.Entity;
				if (((previousValue != value) 
							|| (this._DICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DICHVU.Entity = null;
						previousValue.CT_DT_DVs.Remove(this);
					}
					this._DICHVU.Entity = value;
					if ((value != null))
					{
						value.CT_DT_DVs.Add(this);
						this._IdDV = value.IdDV;
					}
					else
					{
						this._IdDV = default(int);
					}
					this.SendPropertyChanged("DICHVU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DT_MA")]
	public partial class CT_DT_MA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdMA;
		
		private int _IdDT;
		
		private int _SoLuongMA;
		
		private System.Nullable<int> _SoLuongMA_PS;
		
		private EntityRef<DATTIEC> _DATTIEC;
		
		private EntityRef<MONAN> _MONAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMAChanging(int value);
    partial void OnIdMAChanged();
    partial void OnIdDTChanging(int value);
    partial void OnIdDTChanged();
    partial void OnSoLuongMAChanging(int value);
    partial void OnSoLuongMAChanged();
    partial void OnSoLuongMA_PSChanging(System.Nullable<int> value);
    partial void OnSoLuongMA_PSChanged();
    #endregion
		
		public CT_DT_MA()
		{
			this._DATTIEC = default(EntityRef<DATTIEC>);
			this._MONAN = default(EntityRef<MONAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdMA
		{
			get
			{
				return this._IdMA;
			}
			set
			{
				if ((this._IdMA != value))
				{
					if (this._MONAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMAChanging(value);
					this.SendPropertyChanging();
					this._IdMA = value;
					this.SendPropertyChanged("IdMA");
					this.OnIdMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdDT
		{
			get
			{
				return this._IdDT;
			}
			set
			{
				if ((this._IdDT != value))
				{
					if (this._DATTIEC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDTChanging(value);
					this.SendPropertyChanging();
					this._IdDT = value;
					this.SendPropertyChanged("IdDT");
					this.OnIdDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongMA", DbType="Int NOT NULL")]
		public int SoLuongMA
		{
			get
			{
				return this._SoLuongMA;
			}
			set
			{
				if ((this._SoLuongMA != value))
				{
					this.OnSoLuongMAChanging(value);
					this.SendPropertyChanging();
					this._SoLuongMA = value;
					this.SendPropertyChanged("SoLuongMA");
					this.OnSoLuongMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongMA_PS", DbType="Int")]
		public System.Nullable<int> SoLuongMA_PS
		{
			get
			{
				return this._SoLuongMA_PS;
			}
			set
			{
				if ((this._SoLuongMA_PS != value))
				{
					this.OnSoLuongMA_PSChanging(value);
					this.SendPropertyChanging();
					this._SoLuongMA_PS = value;
					this.SendPropertyChanged("SoLuongMA_PS");
					this.OnSoLuongMA_PSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATTIEC_CT_DT_MA", Storage="_DATTIEC", ThisKey="IdDT", OtherKey="IdDT", IsForeignKey=true)]
		public DATTIEC DATTIEC
		{
			get
			{
				return this._DATTIEC.Entity;
			}
			set
			{
				DATTIEC previousValue = this._DATTIEC.Entity;
				if (((previousValue != value) 
							|| (this._DATTIEC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DATTIEC.Entity = null;
						previousValue.CT_DT_MAs.Remove(this);
					}
					this._DATTIEC.Entity = value;
					if ((value != null))
					{
						value.CT_DT_MAs.Add(this);
						this._IdDT = value.IdDT;
					}
					else
					{
						this._IdDT = default(int);
					}
					this.SendPropertyChanged("DATTIEC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONAN_CT_DT_MA", Storage="_MONAN", ThisKey="IdMA", OtherKey="IdMA", IsForeignKey=true)]
		public MONAN MONAN
		{
			get
			{
				return this._MONAN.Entity;
			}
			set
			{
				MONAN previousValue = this._MONAN.Entity;
				if (((previousValue != value) 
							|| (this._MONAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONAN.Entity = null;
						previousValue.CT_DT_MAs.Remove(this);
					}
					this._MONAN.Entity = value;
					if ((value != null))
					{
						value.CT_DT_MAs.Add(this);
						this._IdMA = value.IdMA;
					}
					else
					{
						this._IdMA = default(int);
					}
					this.SendPropertyChanged("MONAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DT_NV")]
	public partial class CT_DT_NV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdNV;
		
		private int _IdDT;
		
		private EntityRef<DATTIEC> _DATTIEC;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNVChanging(int value);
    partial void OnIdNVChanged();
    partial void OnIdDTChanging(int value);
    partial void OnIdDTChanged();
    #endregion
		
		public CT_DT_NV()
		{
			this._DATTIEC = default(EntityRef<DATTIEC>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdNV
		{
			get
			{
				return this._IdNV;
			}
			set
			{
				if ((this._IdNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNVChanging(value);
					this.SendPropertyChanging();
					this._IdNV = value;
					this.SendPropertyChanged("IdNV");
					this.OnIdNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdDT
		{
			get
			{
				return this._IdDT;
			}
			set
			{
				if ((this._IdDT != value))
				{
					if (this._DATTIEC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDTChanging(value);
					this.SendPropertyChanging();
					this._IdDT = value;
					this.SendPropertyChanged("IdDT");
					this.OnIdDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATTIEC_CT_DT_NV", Storage="_DATTIEC", ThisKey="IdDT", OtherKey="IdDT", IsForeignKey=true)]
		public DATTIEC DATTIEC
		{
			get
			{
				return this._DATTIEC.Entity;
			}
			set
			{
				DATTIEC previousValue = this._DATTIEC.Entity;
				if (((previousValue != value) 
							|| (this._DATTIEC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DATTIEC.Entity = null;
						previousValue.CT_DT_NVs.Remove(this);
					}
					this._DATTIEC.Entity = value;
					if ((value != null))
					{
						value.CT_DT_NVs.Add(this);
						this._IdDT = value.IdDT;
					}
					else
					{
						this._IdDT = default(int);
					}
					this.SendPropertyChanged("DATTIEC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CT_DT_NV", Storage="_NHANVIEN", ThisKey="IdNV", OtherKey="IdNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.CT_DT_NVs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.CT_DT_NVs.Add(this);
						this._IdNV = value.IdNV;
					}
					else
					{
						this._IdNV = default(int);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DT_ST")]
	public partial class CT_DT_ST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdST;
		
		private int _IdDT;
		
		private int _SoBanDat;
		
		private System.Nullable<int> _SoBanPS;
		
		private EntityRef<DATTIEC> _DATTIEC;
		
		private EntityRef<SANHTIEC> _SANHTIEC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSTChanging(int value);
    partial void OnIdSTChanged();
    partial void OnIdDTChanging(int value);
    partial void OnIdDTChanged();
    partial void OnSoBanDatChanging(int value);
    partial void OnSoBanDatChanged();
    partial void OnSoBanPSChanging(System.Nullable<int> value);
    partial void OnSoBanPSChanged();
    #endregion
		
		public CT_DT_ST()
		{
			this._DATTIEC = default(EntityRef<DATTIEC>);
			this._SANHTIEC = default(EntityRef<SANHTIEC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdST", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdST
		{
			get
			{
				return this._IdST;
			}
			set
			{
				if ((this._IdST != value))
				{
					if (this._SANHTIEC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSTChanging(value);
					this.SendPropertyChanging();
					this._IdST = value;
					this.SendPropertyChanged("IdST");
					this.OnIdSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdDT
		{
			get
			{
				return this._IdDT;
			}
			set
			{
				if ((this._IdDT != value))
				{
					if (this._DATTIEC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDTChanging(value);
					this.SendPropertyChanging();
					this._IdDT = value;
					this.SendPropertyChanged("IdDT");
					this.OnIdDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoBanDat", DbType="Int NOT NULL")]
		public int SoBanDat
		{
			get
			{
				return this._SoBanDat;
			}
			set
			{
				if ((this._SoBanDat != value))
				{
					this.OnSoBanDatChanging(value);
					this.SendPropertyChanging();
					this._SoBanDat = value;
					this.SendPropertyChanged("SoBanDat");
					this.OnSoBanDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoBanPS", DbType="Int")]
		public System.Nullable<int> SoBanPS
		{
			get
			{
				return this._SoBanPS;
			}
			set
			{
				if ((this._SoBanPS != value))
				{
					this.OnSoBanPSChanging(value);
					this.SendPropertyChanging();
					this._SoBanPS = value;
					this.SendPropertyChanged("SoBanPS");
					this.OnSoBanPSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATTIEC_CT_DT_ST", Storage="_DATTIEC", ThisKey="IdDT", OtherKey="IdDT", IsForeignKey=true)]
		public DATTIEC DATTIEC
		{
			get
			{
				return this._DATTIEC.Entity;
			}
			set
			{
				DATTIEC previousValue = this._DATTIEC.Entity;
				if (((previousValue != value) 
							|| (this._DATTIEC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DATTIEC.Entity = null;
						previousValue.CT_DT_STs.Remove(this);
					}
					this._DATTIEC.Entity = value;
					if ((value != null))
					{
						value.CT_DT_STs.Add(this);
						this._IdDT = value.IdDT;
					}
					else
					{
						this._IdDT = default(int);
					}
					this.SendPropertyChanged("DATTIEC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANHTIEC_CT_DT_ST", Storage="_SANHTIEC", ThisKey="IdST", OtherKey="IdST", IsForeignKey=true)]
		public SANHTIEC SANHTIEC
		{
			get
			{
				return this._SANHTIEC.Entity;
			}
			set
			{
				SANHTIEC previousValue = this._SANHTIEC.Entity;
				if (((previousValue != value) 
							|| (this._SANHTIEC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANHTIEC.Entity = null;
						previousValue.CT_DT_STs.Remove(this);
					}
					this._SANHTIEC.Entity = value;
					if ((value != null))
					{
						value.CT_DT_STs.Add(this);
						this._IdST = value.IdST;
					}
					else
					{
						this._IdST = default(int);
					}
					this.SendPropertyChanged("SANHTIEC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_MA_CBMA")]
	public partial class CT_MA_CBMA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdMA;
		
		private int _IdCBMA;
		
		private int _SoLuong;
		
		private EntityRef<COMBO_MONAN> _COMBO_MONAN;
		
		private EntityRef<MONAN> _MONAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMAChanging(int value);
    partial void OnIdMAChanged();
    partial void OnIdCBMAChanging(int value);
    partial void OnIdCBMAChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    #endregion
		
		public CT_MA_CBMA()
		{
			this._COMBO_MONAN = default(EntityRef<COMBO_MONAN>);
			this._MONAN = default(EntityRef<MONAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdMA
		{
			get
			{
				return this._IdMA;
			}
			set
			{
				if ((this._IdMA != value))
				{
					if (this._MONAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMAChanging(value);
					this.SendPropertyChanging();
					this._IdMA = value;
					this.SendPropertyChanged("IdMA");
					this.OnIdMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCBMA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdCBMA
		{
			get
			{
				return this._IdCBMA;
			}
			set
			{
				if ((this._IdCBMA != value))
				{
					if (this._COMBO_MONAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCBMAChanging(value);
					this.SendPropertyChanging();
					this._IdCBMA = value;
					this.SendPropertyChanged("IdCBMA");
					this.OnIdCBMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COMBO_MONAN_CT_MA_CBMA", Storage="_COMBO_MONAN", ThisKey="IdCBMA", OtherKey="IdCBMA", IsForeignKey=true)]
		public COMBO_MONAN COMBO_MONAN
		{
			get
			{
				return this._COMBO_MONAN.Entity;
			}
			set
			{
				COMBO_MONAN previousValue = this._COMBO_MONAN.Entity;
				if (((previousValue != value) 
							|| (this._COMBO_MONAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COMBO_MONAN.Entity = null;
						previousValue.CT_MA_CBMAs.Remove(this);
					}
					this._COMBO_MONAN.Entity = value;
					if ((value != null))
					{
						value.CT_MA_CBMAs.Add(this);
						this._IdCBMA = value.IdCBMA;
					}
					else
					{
						this._IdCBMA = default(int);
					}
					this.SendPropertyChanged("COMBO_MONAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONAN_CT_MA_CBMA", Storage="_MONAN", ThisKey="IdMA", OtherKey="IdMA", IsForeignKey=true)]
		public MONAN MONAN
		{
			get
			{
				return this._MONAN.Entity;
			}
			set
			{
				MONAN previousValue = this._MONAN.Entity;
				if (((previousValue != value) 
							|| (this._MONAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONAN.Entity = null;
						previousValue.CT_MA_CBMAs.Remove(this);
					}
					this._MONAN.Entity = value;
					if ((value != null))
					{
						value.CT_MA_CBMAs.Add(this);
						this._IdMA = value.IdMA;
					}
					else
					{
						this._IdMA = default(int);
					}
					this.SendPropertyChanged("MONAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_ND_NND")]
	public partial class CT_ND_NND : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdNND;
		
		private string _TenDangNhap;
		
		private string _GhiChu;
		
		private EntityRef<NGUOIDUNG> _NGUOIDUNG;
		
		private EntityRef<NHOMNGUOIDUNG> _NHOMNGUOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNNDChanging(int value);
    partial void OnIdNNDChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public CT_ND_NND()
		{
			this._NGUOIDUNG = default(EntityRef<NGUOIDUNG>);
			this._NHOMNGUOIDUNG = default(EntityRef<NHOMNGUOIDUNG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNND", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdNND
		{
			get
			{
				return this._IdNND;
			}
			set
			{
				if ((this._IdNND != value))
				{
					if (this._NHOMNGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNNDChanging(value);
					this.SendPropertyChanging();
					this._IdNND = value;
					this.SendPropertyChanged("IdNND");
					this.OnIdNNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					if (this._NGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_CT_ND_NND", Storage="_NGUOIDUNG", ThisKey="TenDangNhap", OtherKey="TenDangNhap", IsForeignKey=true)]
		public NGUOIDUNG NGUOIDUNG
		{
			get
			{
				return this._NGUOIDUNG.Entity;
			}
			set
			{
				NGUOIDUNG previousValue = this._NGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUOIDUNG.Entity = null;
						previousValue.CT_ND_NNDs.Remove(this);
					}
					this._NGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.CT_ND_NNDs.Add(this);
						this._TenDangNhap = value.TenDangNhap;
					}
					else
					{
						this._TenDangNhap = default(string);
					}
					this.SendPropertyChanged("NGUOIDUNG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMNGUOIDUNG_CT_ND_NND", Storage="_NHOMNGUOIDUNG", ThisKey="IdNND", OtherKey="IdNND", IsForeignKey=true)]
		public NHOMNGUOIDUNG NHOMNGUOIDUNG
		{
			get
			{
				return this._NHOMNGUOIDUNG.Entity;
			}
			set
			{
				NHOMNGUOIDUNG previousValue = this._NHOMNGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NHOMNGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHOMNGUOIDUNG.Entity = null;
						previousValue.CT_ND_NNDs.Remove(this);
					}
					this._NHOMNGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.CT_ND_NNDs.Add(this);
						this._IdNND = value.IdNND;
					}
					else
					{
						this._IdNND = default(int);
					}
					this.SendPropertyChanged("NHOMNGUOIDUNG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_PHATSINH")]
	public partial class CT_PHATSINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDT;
		
		private int _IdDU;
		
		private int _IdMA;
		
		private int _IdDD;
		
		private int _IdDV;
		
		private System.Nullable<int> _SL_DU_PS;
		
		private System.Nullable<int> _SL_MA_PS;
		
		private System.Nullable<int> _SL_DD_PS;
		
		private System.Nullable<int> _SL_DV_PS;
		
		private EntityRef<DICHVU> _DICHVU;
		
		private EntityRef<DODUNG> _DODUNG;
		
		private EntityRef<DOUONG> _DOUONG;
		
		private EntityRef<MONAN> _MONAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDTChanging(int value);
    partial void OnIdDTChanged();
    partial void OnIdDUChanging(int value);
    partial void OnIdDUChanged();
    partial void OnIdMAChanging(int value);
    partial void OnIdMAChanged();
    partial void OnIdDDChanging(int value);
    partial void OnIdDDChanged();
    partial void OnIdDVChanging(int value);
    partial void OnIdDVChanged();
    partial void OnSL_DU_PSChanging(System.Nullable<int> value);
    partial void OnSL_DU_PSChanged();
    partial void OnSL_MA_PSChanging(System.Nullable<int> value);
    partial void OnSL_MA_PSChanged();
    partial void OnSL_DD_PSChanging(System.Nullable<int> value);
    partial void OnSL_DD_PSChanged();
    partial void OnSL_DV_PSChanging(System.Nullable<int> value);
    partial void OnSL_DV_PSChanged();
    #endregion
		
		public CT_PHATSINH()
		{
			this._DICHVU = default(EntityRef<DICHVU>);
			this._DODUNG = default(EntityRef<DODUNG>);
			this._DOUONG = default(EntityRef<DOUONG>);
			this._MONAN = default(EntityRef<MONAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdDT
		{
			get
			{
				return this._IdDT;
			}
			set
			{
				if ((this._IdDT != value))
				{
					this.OnIdDTChanging(value);
					this.SendPropertyChanging();
					this._IdDT = value;
					this.SendPropertyChanged("IdDT");
					this.OnIdDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDU", DbType="Int NOT NULL")]
		public int IdDU
		{
			get
			{
				return this._IdDU;
			}
			set
			{
				if ((this._IdDU != value))
				{
					if (this._DOUONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDUChanging(value);
					this.SendPropertyChanging();
					this._IdDU = value;
					this.SendPropertyChanged("IdDU");
					this.OnIdDUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMA", DbType="Int NOT NULL")]
		public int IdMA
		{
			get
			{
				return this._IdMA;
			}
			set
			{
				if ((this._IdMA != value))
				{
					if (this._MONAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMAChanging(value);
					this.SendPropertyChanging();
					this._IdMA = value;
					this.SendPropertyChanged("IdMA");
					this.OnIdMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDD", DbType="Int NOT NULL")]
		public int IdDD
		{
			get
			{
				return this._IdDD;
			}
			set
			{
				if ((this._IdDD != value))
				{
					if (this._DODUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDDChanging(value);
					this.SendPropertyChanging();
					this._IdDD = value;
					this.SendPropertyChanged("IdDD");
					this.OnIdDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDV", DbType="Int NOT NULL")]
		public int IdDV
		{
			get
			{
				return this._IdDV;
			}
			set
			{
				if ((this._IdDV != value))
				{
					if (this._DICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDVChanging(value);
					this.SendPropertyChanging();
					this._IdDV = value;
					this.SendPropertyChanged("IdDV");
					this.OnIdDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_DU_PS", DbType="Int")]
		public System.Nullable<int> SL_DU_PS
		{
			get
			{
				return this._SL_DU_PS;
			}
			set
			{
				if ((this._SL_DU_PS != value))
				{
					this.OnSL_DU_PSChanging(value);
					this.SendPropertyChanging();
					this._SL_DU_PS = value;
					this.SendPropertyChanged("SL_DU_PS");
					this.OnSL_DU_PSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_MA_PS", DbType="Int")]
		public System.Nullable<int> SL_MA_PS
		{
			get
			{
				return this._SL_MA_PS;
			}
			set
			{
				if ((this._SL_MA_PS != value))
				{
					this.OnSL_MA_PSChanging(value);
					this.SendPropertyChanging();
					this._SL_MA_PS = value;
					this.SendPropertyChanged("SL_MA_PS");
					this.OnSL_MA_PSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_DD_PS", DbType="Int")]
		public System.Nullable<int> SL_DD_PS
		{
			get
			{
				return this._SL_DD_PS;
			}
			set
			{
				if ((this._SL_DD_PS != value))
				{
					this.OnSL_DD_PSChanging(value);
					this.SendPropertyChanging();
					this._SL_DD_PS = value;
					this.SendPropertyChanged("SL_DD_PS");
					this.OnSL_DD_PSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_DV_PS", DbType="Int")]
		public System.Nullable<int> SL_DV_PS
		{
			get
			{
				return this._SL_DV_PS;
			}
			set
			{
				if ((this._SL_DV_PS != value))
				{
					this.OnSL_DV_PSChanging(value);
					this.SendPropertyChanging();
					this._SL_DV_PS = value;
					this.SendPropertyChanged("SL_DV_PS");
					this.OnSL_DV_PSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_CT_PHATSINH", Storage="_DICHVU", ThisKey="IdDV", OtherKey="IdDV", IsForeignKey=true)]
		public DICHVU DICHVU
		{
			get
			{
				return this._DICHVU.Entity;
			}
			set
			{
				DICHVU previousValue = this._DICHVU.Entity;
				if (((previousValue != value) 
							|| (this._DICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DICHVU.Entity = null;
						previousValue.CT_PHATSINHs.Remove(this);
					}
					this._DICHVU.Entity = value;
					if ((value != null))
					{
						value.CT_PHATSINHs.Add(this);
						this._IdDV = value.IdDV;
					}
					else
					{
						this._IdDV = default(int);
					}
					this.SendPropertyChanged("DICHVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DODUNG_CT_PHATSINH", Storage="_DODUNG", ThisKey="IdDD", OtherKey="IdDD", IsForeignKey=true)]
		public DODUNG DODUNG
		{
			get
			{
				return this._DODUNG.Entity;
			}
			set
			{
				DODUNG previousValue = this._DODUNG.Entity;
				if (((previousValue != value) 
							|| (this._DODUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DODUNG.Entity = null;
						previousValue.CT_PHATSINHs.Remove(this);
					}
					this._DODUNG.Entity = value;
					if ((value != null))
					{
						value.CT_PHATSINHs.Add(this);
						this._IdDD = value.IdDD;
					}
					else
					{
						this._IdDD = default(int);
					}
					this.SendPropertyChanged("DODUNG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOUONG_CT_PHATSINH", Storage="_DOUONG", ThisKey="IdDU", OtherKey="IdDU", IsForeignKey=true)]
		public DOUONG DOUONG
		{
			get
			{
				return this._DOUONG.Entity;
			}
			set
			{
				DOUONG previousValue = this._DOUONG.Entity;
				if (((previousValue != value) 
							|| (this._DOUONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOUONG.Entity = null;
						previousValue.CT_PHATSINHs.Remove(this);
					}
					this._DOUONG.Entity = value;
					if ((value != null))
					{
						value.CT_PHATSINHs.Add(this);
						this._IdDU = value.IdDU;
					}
					else
					{
						this._IdDU = default(int);
					}
					this.SendPropertyChanged("DOUONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONAN_CT_PHATSINH", Storage="_MONAN", ThisKey="IdMA", OtherKey="IdMA", IsForeignKey=true)]
		public MONAN MONAN
		{
			get
			{
				return this._MONAN.Entity;
			}
			set
			{
				MONAN previousValue = this._MONAN.Entity;
				if (((previousValue != value) 
							|| (this._MONAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONAN.Entity = null;
						previousValue.CT_PHATSINHs.Remove(this);
					}
					this._MONAN.Entity = value;
					if ((value != null))
					{
						value.CT_PHATSINHs.Add(this);
						this._IdMA = value.IdMA;
					}
					else
					{
						this._IdMA = default(int);
					}
					this.SendPropertyChanged("MONAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DATTIEC")]
	public partial class DATTIEC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDT;
		
		private int _IdKH;
		
		private int _IdLT;
		
		private int _IdCBMA;
		
		private System.DateTime _NgayDT;
		
		private string _TenChuRe;
		
		private string _TenCoDau;
		
		private System.Nullable<int> _SLKhach;
		
		private System.Nullable<int> _SLNhanVien;
		
		private System.DateTime _ThoiGianBD;
		
		private string _GhiChu;
		
		private EntitySet<CT_DT_DU> _CT_DT_DUs;
		
		private EntitySet<CT_DT_DV> _CT_DT_DVs;
		
		private EntitySet<CT_DT_MA> _CT_DT_MAs;
		
		private EntitySet<CT_DT_NV> _CT_DT_NVs;
		
		private EntitySet<CT_DT_ST> _CT_DT_STs;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntityRef<COMBO_MONAN> _COMBO_MONAN;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<LOAITIEC> _LOAITIEC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDTChanging(int value);
    partial void OnIdDTChanged();
    partial void OnIdKHChanging(int value);
    partial void OnIdKHChanged();
    partial void OnIdLTChanging(int value);
    partial void OnIdLTChanged();
    partial void OnIdCBMAChanging(int value);
    partial void OnIdCBMAChanged();
    partial void OnNgayDTChanging(System.DateTime value);
    partial void OnNgayDTChanged();
    partial void OnTenChuReChanging(string value);
    partial void OnTenChuReChanged();
    partial void OnTenCoDauChanging(string value);
    partial void OnTenCoDauChanged();
    partial void OnSLKhachChanging(System.Nullable<int> value);
    partial void OnSLKhachChanged();
    partial void OnSLNhanVienChanging(System.Nullable<int> value);
    partial void OnSLNhanVienChanged();
    partial void OnThoiGianBDChanging(System.DateTime value);
    partial void OnThoiGianBDChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public DATTIEC()
		{
			this._CT_DT_DUs = new EntitySet<CT_DT_DU>(new Action<CT_DT_DU>(this.attach_CT_DT_DUs), new Action<CT_DT_DU>(this.detach_CT_DT_DUs));
			this._CT_DT_DVs = new EntitySet<CT_DT_DV>(new Action<CT_DT_DV>(this.attach_CT_DT_DVs), new Action<CT_DT_DV>(this.detach_CT_DT_DVs));
			this._CT_DT_MAs = new EntitySet<CT_DT_MA>(new Action<CT_DT_MA>(this.attach_CT_DT_MAs), new Action<CT_DT_MA>(this.detach_CT_DT_MAs));
			this._CT_DT_NVs = new EntitySet<CT_DT_NV>(new Action<CT_DT_NV>(this.attach_CT_DT_NVs), new Action<CT_DT_NV>(this.detach_CT_DT_NVs));
			this._CT_DT_STs = new EntitySet<CT_DT_ST>(new Action<CT_DT_ST>(this.attach_CT_DT_STs), new Action<CT_DT_ST>(this.detach_CT_DT_STs));
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._COMBO_MONAN = default(EntityRef<COMBO_MONAN>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._LOAITIEC = default(EntityRef<LOAITIEC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDT
		{
			get
			{
				return this._IdDT;
			}
			set
			{
				if ((this._IdDT != value))
				{
					this.OnIdDTChanging(value);
					this.SendPropertyChanging();
					this._IdDT = value;
					this.SendPropertyChanged("IdDT");
					this.OnIdDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKH", DbType="Int NOT NULL")]
		public int IdKH
		{
			get
			{
				return this._IdKH;
			}
			set
			{
				if ((this._IdKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKHChanging(value);
					this.SendPropertyChanging();
					this._IdKH = value;
					this.SendPropertyChanged("IdKH");
					this.OnIdKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLT", DbType="Int NOT NULL")]
		public int IdLT
		{
			get
			{
				return this._IdLT;
			}
			set
			{
				if ((this._IdLT != value))
				{
					if (this._LOAITIEC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLTChanging(value);
					this.SendPropertyChanging();
					this._IdLT = value;
					this.SendPropertyChanged("IdLT");
					this.OnIdLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCBMA", DbType="Int NOT NULL")]
		public int IdCBMA
		{
			get
			{
				return this._IdCBMA;
			}
			set
			{
				if ((this._IdCBMA != value))
				{
					if (this._COMBO_MONAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCBMAChanging(value);
					this.SendPropertyChanging();
					this._IdCBMA = value;
					this.SendPropertyChanged("IdCBMA");
					this.OnIdCBMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDT", DbType="Date NOT NULL")]
		public System.DateTime NgayDT
		{
			get
			{
				return this._NgayDT;
			}
			set
			{
				if ((this._NgayDT != value))
				{
					this.OnNgayDTChanging(value);
					this.SendPropertyChanging();
					this._NgayDT = value;
					this.SendPropertyChanged("NgayDT");
					this.OnNgayDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChuRe", DbType="NVarChar(100)")]
		public string TenChuRe
		{
			get
			{
				return this._TenChuRe;
			}
			set
			{
				if ((this._TenChuRe != value))
				{
					this.OnTenChuReChanging(value);
					this.SendPropertyChanging();
					this._TenChuRe = value;
					this.SendPropertyChanged("TenChuRe");
					this.OnTenChuReChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCoDau", DbType="NVarChar(100)")]
		public string TenCoDau
		{
			get
			{
				return this._TenCoDau;
			}
			set
			{
				if ((this._TenCoDau != value))
				{
					this.OnTenCoDauChanging(value);
					this.SendPropertyChanging();
					this._TenCoDau = value;
					this.SendPropertyChanged("TenCoDau");
					this.OnTenCoDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLKhach", DbType="Int")]
		public System.Nullable<int> SLKhach
		{
			get
			{
				return this._SLKhach;
			}
			set
			{
				if ((this._SLKhach != value))
				{
					this.OnSLKhachChanging(value);
					this.SendPropertyChanging();
					this._SLKhach = value;
					this.SendPropertyChanged("SLKhach");
					this.OnSLKhachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLNhanVien", DbType="Int")]
		public System.Nullable<int> SLNhanVien
		{
			get
			{
				return this._SLNhanVien;
			}
			set
			{
				if ((this._SLNhanVien != value))
				{
					this.OnSLNhanVienChanging(value);
					this.SendPropertyChanging();
					this._SLNhanVien = value;
					this.SendPropertyChanged("SLNhanVien");
					this.OnSLNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBD", DbType="DateTime NOT NULL")]
		public System.DateTime ThoiGianBD
		{
			get
			{
				return this._ThoiGianBD;
			}
			set
			{
				if ((this._ThoiGianBD != value))
				{
					this.OnThoiGianBDChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBD = value;
					this.SendPropertyChanged("ThoiGianBD");
					this.OnThoiGianBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATTIEC_CT_DT_DU", Storage="_CT_DT_DUs", ThisKey="IdDT", OtherKey="IdDT")]
		public EntitySet<CT_DT_DU> CT_DT_DUs
		{
			get
			{
				return this._CT_DT_DUs;
			}
			set
			{
				this._CT_DT_DUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATTIEC_CT_DT_DV", Storage="_CT_DT_DVs", ThisKey="IdDT", OtherKey="IdDT")]
		public EntitySet<CT_DT_DV> CT_DT_DVs
		{
			get
			{
				return this._CT_DT_DVs;
			}
			set
			{
				this._CT_DT_DVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATTIEC_CT_DT_MA", Storage="_CT_DT_MAs", ThisKey="IdDT", OtherKey="IdDT")]
		public EntitySet<CT_DT_MA> CT_DT_MAs
		{
			get
			{
				return this._CT_DT_MAs;
			}
			set
			{
				this._CT_DT_MAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATTIEC_CT_DT_NV", Storage="_CT_DT_NVs", ThisKey="IdDT", OtherKey="IdDT")]
		public EntitySet<CT_DT_NV> CT_DT_NVs
		{
			get
			{
				return this._CT_DT_NVs;
			}
			set
			{
				this._CT_DT_NVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATTIEC_CT_DT_ST", Storage="_CT_DT_STs", ThisKey="IdDT", OtherKey="IdDT")]
		public EntitySet<CT_DT_ST> CT_DT_STs
		{
			get
			{
				return this._CT_DT_STs;
			}
			set
			{
				this._CT_DT_STs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATTIEC_HOADON", Storage="_HOADONs", ThisKey="IdDT", OtherKey="IdDT")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COMBO_MONAN_DATTIEC", Storage="_COMBO_MONAN", ThisKey="IdCBMA", OtherKey="IdCBMA", IsForeignKey=true)]
		public COMBO_MONAN COMBO_MONAN
		{
			get
			{
				return this._COMBO_MONAN.Entity;
			}
			set
			{
				COMBO_MONAN previousValue = this._COMBO_MONAN.Entity;
				if (((previousValue != value) 
							|| (this._COMBO_MONAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COMBO_MONAN.Entity = null;
						previousValue.DATTIECs.Remove(this);
					}
					this._COMBO_MONAN.Entity = value;
					if ((value != null))
					{
						value.DATTIECs.Add(this);
						this._IdCBMA = value.IdCBMA;
					}
					else
					{
						this._IdCBMA = default(int);
					}
					this.SendPropertyChanged("COMBO_MONAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DATTIEC", Storage="_KHACHHANG", ThisKey="IdKH", OtherKey="IdKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DATTIECs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DATTIECs.Add(this);
						this._IdKH = value.IdKH;
					}
					else
					{
						this._IdKH = default(int);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITIEC_DATTIEC", Storage="_LOAITIEC", ThisKey="IdLT", OtherKey="IdLT", IsForeignKey=true)]
		public LOAITIEC LOAITIEC
		{
			get
			{
				return this._LOAITIEC.Entity;
			}
			set
			{
				LOAITIEC previousValue = this._LOAITIEC.Entity;
				if (((previousValue != value) 
							|| (this._LOAITIEC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAITIEC.Entity = null;
						previousValue.DATTIECs.Remove(this);
					}
					this._LOAITIEC.Entity = value;
					if ((value != null))
					{
						value.DATTIECs.Add(this);
						this._IdLT = value.IdLT;
					}
					else
					{
						this._IdLT = default(int);
					}
					this.SendPropertyChanged("LOAITIEC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DT_DUs(CT_DT_DU entity)
		{
			this.SendPropertyChanging();
			entity.DATTIEC = this;
		}
		
		private void detach_CT_DT_DUs(CT_DT_DU entity)
		{
			this.SendPropertyChanging();
			entity.DATTIEC = null;
		}
		
		private void attach_CT_DT_DVs(CT_DT_DV entity)
		{
			this.SendPropertyChanging();
			entity.DATTIEC = this;
		}
		
		private void detach_CT_DT_DVs(CT_DT_DV entity)
		{
			this.SendPropertyChanging();
			entity.DATTIEC = null;
		}
		
		private void attach_CT_DT_MAs(CT_DT_MA entity)
		{
			this.SendPropertyChanging();
			entity.DATTIEC = this;
		}
		
		private void detach_CT_DT_MAs(CT_DT_MA entity)
		{
			this.SendPropertyChanging();
			entity.DATTIEC = null;
		}
		
		private void attach_CT_DT_NVs(CT_DT_NV entity)
		{
			this.SendPropertyChanging();
			entity.DATTIEC = this;
		}
		
		private void detach_CT_DT_NVs(CT_DT_NV entity)
		{
			this.SendPropertyChanging();
			entity.DATTIEC = null;
		}
		
		private void attach_CT_DT_STs(CT_DT_ST entity)
		{
			this.SendPropertyChanging();
			entity.DATTIEC = this;
		}
		
		private void detach_CT_DT_STs(CT_DT_ST entity)
		{
			this.SendPropertyChanging();
			entity.DATTIEC = null;
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.DATTIEC = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.DATTIEC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DICHVU")]
	public partial class DICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDV;
		
		private string _TenDV;
		
		private decimal _DonGiaDV;
		
		private string _GhiChu;
		
		private EntitySet<CT_DT_DV> _CT_DT_DVs;
		
		private EntitySet<CT_PHATSINH> _CT_PHATSINHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDVChanging(int value);
    partial void OnIdDVChanged();
    partial void OnTenDVChanging(string value);
    partial void OnTenDVChanged();
    partial void OnDonGiaDVChanging(decimal value);
    partial void OnDonGiaDVChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public DICHVU()
		{
			this._CT_DT_DVs = new EntitySet<CT_DT_DV>(new Action<CT_DT_DV>(this.attach_CT_DT_DVs), new Action<CT_DT_DV>(this.detach_CT_DT_DVs));
			this._CT_PHATSINHs = new EntitySet<CT_PHATSINH>(new Action<CT_PHATSINH>(this.attach_CT_PHATSINHs), new Action<CT_PHATSINH>(this.detach_CT_PHATSINHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdDV
		{
			get
			{
				return this._IdDV;
			}
			set
			{
				if ((this._IdDV != value))
				{
					this.OnIdDVChanging(value);
					this.SendPropertyChanging();
					this._IdDV = value;
					this.SendPropertyChanged("IdDV");
					this.OnIdDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDV", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenDV
		{
			get
			{
				return this._TenDV;
			}
			set
			{
				if ((this._TenDV != value))
				{
					this.OnTenDVChanging(value);
					this.SendPropertyChanging();
					this._TenDV = value;
					this.SendPropertyChanged("TenDV");
					this.OnTenDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGiaDV", DbType="Money NOT NULL")]
		public decimal DonGiaDV
		{
			get
			{
				return this._DonGiaDV;
			}
			set
			{
				if ((this._DonGiaDV != value))
				{
					this.OnDonGiaDVChanging(value);
					this.SendPropertyChanging();
					this._DonGiaDV = value;
					this.SendPropertyChanged("DonGiaDV");
					this.OnDonGiaDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_CT_DT_DV", Storage="_CT_DT_DVs", ThisKey="IdDV", OtherKey="IdDV")]
		public EntitySet<CT_DT_DV> CT_DT_DVs
		{
			get
			{
				return this._CT_DT_DVs;
			}
			set
			{
				this._CT_DT_DVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_CT_PHATSINH", Storage="_CT_PHATSINHs", ThisKey="IdDV", OtherKey="IdDV")]
		public EntitySet<CT_PHATSINH> CT_PHATSINHs
		{
			get
			{
				return this._CT_PHATSINHs;
			}
			set
			{
				this._CT_PHATSINHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DT_DVs(CT_DT_DV entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = this;
		}
		
		private void detach_CT_DT_DVs(CT_DT_DV entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = null;
		}
		
		private void attach_CT_PHATSINHs(CT_PHATSINH entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = this;
		}
		
		private void detach_CT_PHATSINHs(CT_PHATSINH entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DODUNG")]
	public partial class DODUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDD;
		
		private string _TenDD;
		
		private decimal _ChiPhiDD;
		
		private EntitySet<CT_PHATSINH> _CT_PHATSINHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDDChanging(int value);
    partial void OnIdDDChanged();
    partial void OnTenDDChanging(string value);
    partial void OnTenDDChanged();
    partial void OnChiPhiDDChanging(decimal value);
    partial void OnChiPhiDDChanged();
    #endregion
		
		public DODUNG()
		{
			this._CT_PHATSINHs = new EntitySet<CT_PHATSINH>(new Action<CT_PHATSINH>(this.attach_CT_PHATSINHs), new Action<CT_PHATSINH>(this.detach_CT_PHATSINHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDD
		{
			get
			{
				return this._IdDD;
			}
			set
			{
				if ((this._IdDD != value))
				{
					this.OnIdDDChanging(value);
					this.SendPropertyChanging();
					this._IdDD = value;
					this.SendPropertyChanged("IdDD");
					this.OnIdDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDD", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TenDD
		{
			get
			{
				return this._TenDD;
			}
			set
			{
				if ((this._TenDD != value))
				{
					this.OnTenDDChanging(value);
					this.SendPropertyChanging();
					this._TenDD = value;
					this.SendPropertyChanged("TenDD");
					this.OnTenDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiPhiDD", DbType="Money NOT NULL")]
		public decimal ChiPhiDD
		{
			get
			{
				return this._ChiPhiDD;
			}
			set
			{
				if ((this._ChiPhiDD != value))
				{
					this.OnChiPhiDDChanging(value);
					this.SendPropertyChanging();
					this._ChiPhiDD = value;
					this.SendPropertyChanged("ChiPhiDD");
					this.OnChiPhiDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DODUNG_CT_PHATSINH", Storage="_CT_PHATSINHs", ThisKey="IdDD", OtherKey="IdDD")]
		public EntitySet<CT_PHATSINH> CT_PHATSINHs
		{
			get
			{
				return this._CT_PHATSINHs;
			}
			set
			{
				this._CT_PHATSINHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_PHATSINHs(CT_PHATSINH entity)
		{
			this.SendPropertyChanging();
			entity.DODUNG = this;
		}
		
		private void detach_CT_PHATSINHs(CT_PHATSINH entity)
		{
			this.SendPropertyChanging();
			entity.DODUNG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DOUONG")]
	public partial class DOUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDU;
		
		private string _TenDU;
		
		private string _DVT;
		
		private decimal _DonGia;
		
		private decimal _DonGia_PS;
		
		private string _GhiChu;
		
		private int _IdLDU;
		
		private EntitySet<CT_DT_DU> _CT_DT_DUs;
		
		private EntitySet<CT_PHATSINH> _CT_PHATSINHs;
		
		private EntityRef<LOAIDOUONG> _LOAIDOUONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDUChanging(int value);
    partial void OnIdDUChanged();
    partial void OnTenDUChanging(string value);
    partial void OnTenDUChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnDonGiaChanging(decimal value);
    partial void OnDonGiaChanged();
    partial void OnDonGia_PSChanging(decimal value);
    partial void OnDonGia_PSChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnIdLDUChanging(int value);
    partial void OnIdLDUChanged();
    #endregion
		
		public DOUONG()
		{
			this._CT_DT_DUs = new EntitySet<CT_DT_DU>(new Action<CT_DT_DU>(this.attach_CT_DT_DUs), new Action<CT_DT_DU>(this.detach_CT_DT_DUs));
			this._CT_PHATSINHs = new EntitySet<CT_PHATSINH>(new Action<CT_PHATSINH>(this.attach_CT_PHATSINHs), new Action<CT_PHATSINH>(this.detach_CT_PHATSINHs));
			this._LOAIDOUONG = default(EntityRef<LOAIDOUONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDU", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDU
		{
			get
			{
				return this._IdDU;
			}
			set
			{
				if ((this._IdDU != value))
				{
					this.OnIdDUChanging(value);
					this.SendPropertyChanging();
					this._IdDU = value;
					this.SendPropertyChanged("IdDU");
					this.OnIdDUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDU", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenDU
		{
			get
			{
				return this._TenDU;
			}
			set
			{
				if ((this._TenDU != value))
				{
					this.OnTenDUChanging(value);
					this.SendPropertyChanging();
					this._TenDU = value;
					this.SendPropertyChanged("TenDU");
					this.OnTenDUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(10)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Money NOT NULL")]
		public decimal DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia_PS", DbType="Money NOT NULL")]
		public decimal DonGia_PS
		{
			get
			{
				return this._DonGia_PS;
			}
			set
			{
				if ((this._DonGia_PS != value))
				{
					this.OnDonGia_PSChanging(value);
					this.SendPropertyChanging();
					this._DonGia_PS = value;
					this.SendPropertyChanged("DonGia_PS");
					this.OnDonGia_PSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLDU", DbType="Int NOT NULL")]
		public int IdLDU
		{
			get
			{
				return this._IdLDU;
			}
			set
			{
				if ((this._IdLDU != value))
				{
					if (this._LOAIDOUONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLDUChanging(value);
					this.SendPropertyChanging();
					this._IdLDU = value;
					this.SendPropertyChanged("IdLDU");
					this.OnIdLDUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOUONG_CT_DT_DU", Storage="_CT_DT_DUs", ThisKey="IdDU", OtherKey="IdDU")]
		public EntitySet<CT_DT_DU> CT_DT_DUs
		{
			get
			{
				return this._CT_DT_DUs;
			}
			set
			{
				this._CT_DT_DUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOUONG_CT_PHATSINH", Storage="_CT_PHATSINHs", ThisKey="IdDU", OtherKey="IdDU")]
		public EntitySet<CT_PHATSINH> CT_PHATSINHs
		{
			get
			{
				return this._CT_PHATSINHs;
			}
			set
			{
				this._CT_PHATSINHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIDOUONG_DOUONG", Storage="_LOAIDOUONG", ThisKey="IdLDU", OtherKey="IdLDU", IsForeignKey=true)]
		public LOAIDOUONG LOAIDOUONG
		{
			get
			{
				return this._LOAIDOUONG.Entity;
			}
			set
			{
				LOAIDOUONG previousValue = this._LOAIDOUONG.Entity;
				if (((previousValue != value) 
							|| (this._LOAIDOUONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIDOUONG.Entity = null;
						previousValue.DOUONGs.Remove(this);
					}
					this._LOAIDOUONG.Entity = value;
					if ((value != null))
					{
						value.DOUONGs.Add(this);
						this._IdLDU = value.IdLDU;
					}
					else
					{
						this._IdLDU = default(int);
					}
					this.SendPropertyChanged("LOAIDOUONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DT_DUs(CT_DT_DU entity)
		{
			this.SendPropertyChanging();
			entity.DOUONG = this;
		}
		
		private void detach_CT_DT_DUs(CT_DT_DU entity)
		{
			this.SendPropertyChanging();
			entity.DOUONG = null;
		}
		
		private void attach_CT_PHATSINHs(CT_PHATSINH entity)
		{
			this.SendPropertyChanging();
			entity.DOUONG = this;
		}
		
		private void detach_CT_PHATSINHs(CT_PHATSINH entity)
		{
			this.SendPropertyChanging();
			entity.DOUONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdHD;
		
		private decimal _TongTien;
		
		private decimal _DatCoc;
		
		private System.DateTime _NgayDatCoc;
		
		private System.Nullable<System.DateTime> _NgayThanhToan;
		
		private int _IdDT;
		
		private EntityRef<DATTIEC> _DATTIEC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdHDChanging(int value);
    partial void OnIdHDChanged();
    partial void OnTongTienChanging(decimal value);
    partial void OnTongTienChanged();
    partial void OnDatCocChanging(decimal value);
    partial void OnDatCocChanged();
    partial void OnNgayDatCocChanging(System.DateTime value);
    partial void OnNgayDatCocChanged();
    partial void OnNgayThanhToanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThanhToanChanged();
    partial void OnIdDTChanging(int value);
    partial void OnIdDTChanged();
    #endregion
		
		public HOADON()
		{
			this._DATTIEC = default(EntityRef<DATTIEC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdHD
		{
			get
			{
				return this._IdHD;
			}
			set
			{
				if ((this._IdHD != value))
				{
					this.OnIdHDChanging(value);
					this.SendPropertyChanging();
					this._IdHD = value;
					this.SendPropertyChanged("IdHD");
					this.OnIdHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Money NOT NULL")]
		public decimal TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatCoc", DbType="Money NOT NULL")]
		public decimal DatCoc
		{
			get
			{
				return this._DatCoc;
			}
			set
			{
				if ((this._DatCoc != value))
				{
					this.OnDatCocChanging(value);
					this.SendPropertyChanging();
					this._DatCoc = value;
					this.SendPropertyChanged("DatCoc");
					this.OnDatCocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDatCoc", DbType="DateTime NOT NULL")]
		public System.DateTime NgayDatCoc
		{
			get
			{
				return this._NgayDatCoc;
			}
			set
			{
				if ((this._NgayDatCoc != value))
				{
					this.OnNgayDatCocChanging(value);
					this.SendPropertyChanging();
					this._NgayDatCoc = value;
					this.SendPropertyChanged("NgayDatCoc");
					this.OnNgayDatCocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThanhToan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayThanhToan
		{
			get
			{
				return this._NgayThanhToan;
			}
			set
			{
				if ((this._NgayThanhToan != value))
				{
					this.OnNgayThanhToanChanging(value);
					this.SendPropertyChanging();
					this._NgayThanhToan = value;
					this.SendPropertyChanged("NgayThanhToan");
					this.OnNgayThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDT", DbType="Int NOT NULL")]
		public int IdDT
		{
			get
			{
				return this._IdDT;
			}
			set
			{
				if ((this._IdDT != value))
				{
					if (this._DATTIEC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDTChanging(value);
					this.SendPropertyChanging();
					this._IdDT = value;
					this.SendPropertyChanged("IdDT");
					this.OnIdDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DATTIEC_HOADON", Storage="_DATTIEC", ThisKey="IdDT", OtherKey="IdDT", IsForeignKey=true)]
		public DATTIEC DATTIEC
		{
			get
			{
				return this._DATTIEC.Entity;
			}
			set
			{
				DATTIEC previousValue = this._DATTIEC.Entity;
				if (((previousValue != value) 
							|| (this._DATTIEC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DATTIEC.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._DATTIEC.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._IdDT = value.IdDT;
					}
					else
					{
						this._IdDT = default(int);
					}
					this.SendPropertyChanged("DATTIEC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdKH;
		
		private string _HoTenKH;
		
		private System.DateTime _NgaySinhKH;
		
		private bool _GioiTinhKH;
		
		private string _DiaChiKH;
		
		private string _DienThoaiKH;
		
		private string _EmailKH;
		
		private string _GhiChu;
		
		private EntitySet<DATTIEC> _DATTIECs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdKHChanging(int value);
    partial void OnIdKHChanged();
    partial void OnHoTenKHChanging(string value);
    partial void OnHoTenKHChanged();
    partial void OnNgaySinhKHChanging(System.DateTime value);
    partial void OnNgaySinhKHChanged();
    partial void OnGioiTinhKHChanging(bool value);
    partial void OnGioiTinhKHChanged();
    partial void OnDiaChiKHChanging(string value);
    partial void OnDiaChiKHChanged();
    partial void OnDienThoaiKHChanging(string value);
    partial void OnDienThoaiKHChanged();
    partial void OnEmailKHChanging(string value);
    partial void OnEmailKHChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DATTIECs = new EntitySet<DATTIEC>(new Action<DATTIEC>(this.attach_DATTIECs), new Action<DATTIEC>(this.detach_DATTIECs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdKH
		{
			get
			{
				return this._IdKH;
			}
			set
			{
				if ((this._IdKH != value))
				{
					this.OnIdKHChanging(value);
					this.SendPropertyChanging();
					this._IdKH = value;
					this.SendPropertyChanged("IdKH");
					this.OnIdKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenKH", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTenKH
		{
			get
			{
				return this._HoTenKH;
			}
			set
			{
				if ((this._HoTenKH != value))
				{
					this.OnHoTenKHChanging(value);
					this.SendPropertyChanging();
					this._HoTenKH = value;
					this.SendPropertyChanged("HoTenKH");
					this.OnHoTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinhKH", DbType="Date NOT NULL")]
		public System.DateTime NgaySinhKH
		{
			get
			{
				return this._NgaySinhKH;
			}
			set
			{
				if ((this._NgaySinhKH != value))
				{
					this.OnNgaySinhKHChanging(value);
					this.SendPropertyChanging();
					this._NgaySinhKH = value;
					this.SendPropertyChanged("NgaySinhKH");
					this.OnNgaySinhKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinhKH", DbType="Bit NOT NULL")]
		public bool GioiTinhKH
		{
			get
			{
				return this._GioiTinhKH;
			}
			set
			{
				if ((this._GioiTinhKH != value))
				{
					this.OnGioiTinhKHChanging(value);
					this.SendPropertyChanging();
					this._GioiTinhKH = value;
					this.SendPropertyChanged("GioiTinhKH");
					this.OnGioiTinhKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiKH", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DiaChiKH
		{
			get
			{
				return this._DiaChiKH;
			}
			set
			{
				if ((this._DiaChiKH != value))
				{
					this.OnDiaChiKHChanging(value);
					this.SendPropertyChanging();
					this._DiaChiKH = value;
					this.SendPropertyChanged("DiaChiKH");
					this.OnDiaChiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoaiKH", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string DienThoaiKH
		{
			get
			{
				return this._DienThoaiKH;
			}
			set
			{
				if ((this._DienThoaiKH != value))
				{
					this.OnDienThoaiKHChanging(value);
					this.SendPropertyChanging();
					this._DienThoaiKH = value;
					this.SendPropertyChanged("DienThoaiKH");
					this.OnDienThoaiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailKH", DbType="VarChar(50)")]
		public string EmailKH
		{
			get
			{
				return this._EmailKH;
			}
			set
			{
				if ((this._EmailKH != value))
				{
					this.OnEmailKHChanging(value);
					this.SendPropertyChanging();
					this._EmailKH = value;
					this.SendPropertyChanged("EmailKH");
					this.OnEmailKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DATTIEC", Storage="_DATTIECs", ThisKey="IdKH", OtherKey="IdKH")]
		public EntitySet<DATTIEC> DATTIECs
		{
			get
			{
				return this._DATTIECs;
			}
			set
			{
				this._DATTIECs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DATTIECs(DATTIEC entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DATTIECs(DATTIEC entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIDOUONG")]
	public partial class LOAIDOUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdLDU;
		
		private string _TenLDU;
		
		private string _GhiChu;
		
		private EntitySet<DOUONG> _DOUONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdLDUChanging(int value);
    partial void OnIdLDUChanged();
    partial void OnTenLDUChanging(string value);
    partial void OnTenLDUChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public LOAIDOUONG()
		{
			this._DOUONGs = new EntitySet<DOUONG>(new Action<DOUONG>(this.attach_DOUONGs), new Action<DOUONG>(this.detach_DOUONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLDU", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdLDU
		{
			get
			{
				return this._IdLDU;
			}
			set
			{
				if ((this._IdLDU != value))
				{
					this.OnIdLDUChanging(value);
					this.SendPropertyChanging();
					this._IdLDU = value;
					this.SendPropertyChanged("IdLDU");
					this.OnIdLDUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLDU", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string TenLDU
		{
			get
			{
				return this._TenLDU;
			}
			set
			{
				if ((this._TenLDU != value))
				{
					this.OnTenLDUChanging(value);
					this.SendPropertyChanging();
					this._TenLDU = value;
					this.SendPropertyChanged("TenLDU");
					this.OnTenLDUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIDOUONG_DOUONG", Storage="_DOUONGs", ThisKey="IdLDU", OtherKey="IdLDU")]
		public EntitySet<DOUONG> DOUONGs
		{
			get
			{
				return this._DOUONGs;
			}
			set
			{
				this._DOUONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DOUONGs(DOUONG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIDOUONG = this;
		}
		
		private void detach_DOUONGs(DOUONG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIDOUONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAITIEC")]
	public partial class LOAITIEC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdLT;
		
		private string _TenLT;
		
		private EntitySet<DATTIEC> _DATTIECs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdLTChanging(int value);
    partial void OnIdLTChanged();
    partial void OnTenLTChanging(string value);
    partial void OnTenLTChanged();
    #endregion
		
		public LOAITIEC()
		{
			this._DATTIECs = new EntitySet<DATTIEC>(new Action<DATTIEC>(this.attach_DATTIECs), new Action<DATTIEC>(this.detach_DATTIECs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdLT
		{
			get
			{
				return this._IdLT;
			}
			set
			{
				if ((this._IdLT != value))
				{
					this.OnIdLTChanging(value);
					this.SendPropertyChanging();
					this._IdLT = value;
					this.SendPropertyChanged("IdLT");
					this.OnIdLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLT", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenLT
		{
			get
			{
				return this._TenLT;
			}
			set
			{
				if ((this._TenLT != value))
				{
					this.OnTenLTChanging(value);
					this.SendPropertyChanging();
					this._TenLT = value;
					this.SendPropertyChanged("TenLT");
					this.OnTenLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITIEC_DATTIEC", Storage="_DATTIECs", ThisKey="IdLT", OtherKey="IdLT")]
		public EntitySet<DATTIEC> DATTIECs
		{
			get
			{
				return this._DATTIECs;
			}
			set
			{
				this._DATTIECs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DATTIECs(DATTIEC entity)
		{
			this.SendPropertyChanging();
			entity.LOAITIEC = this;
		}
		
		private void detach_DATTIECs(DATTIEC entity)
		{
			this.SendPropertyChanging();
			entity.LOAITIEC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MANHINH")]
	public partial class MANHINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdMH;
		
		private string _TenMH;
		
		private EntitySet<PHANQUYEN> _PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMHChanging(int value);
    partial void OnIdMHChanged();
    partial void OnTenMHChanging(string value);
    partial void OnTenMHChanged();
    #endregion
		
		public MANHINH()
		{
			this._PHANQUYENs = new EntitySet<PHANQUYEN>(new Action<PHANQUYEN>(this.attach_PHANQUYENs), new Action<PHANQUYEN>(this.detach_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdMH
		{
			get
			{
				return this._IdMH;
			}
			set
			{
				if ((this._IdMH != value))
				{
					this.OnIdMHChanging(value);
					this.SendPropertyChanging();
					this._IdMH = value;
					this.SendPropertyChanged("IdMH");
					this.OnIdMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenMH
		{
			get
			{
				return this._TenMH;
			}
			set
			{
				if ((this._TenMH != value))
				{
					this.OnTenMHChanging(value);
					this.SendPropertyChanging();
					this._TenMH = value;
					this.SendPropertyChanged("TenMH");
					this.OnTenMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANHINH_PHANQUYEN", Storage="_PHANQUYENs", ThisKey="IdMH", OtherKey="IdMH")]
		public EntitySet<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this._PHANQUYENs;
			}
			set
			{
				this._PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.MANHINH = this;
		}
		
		private void detach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.MANHINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONAN")]
	public partial class MONAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdMA;
		
		private string _TenMA;
		
		private string _DVT;
		
		private decimal _DonGia;
		
		private string _GhiChu;
		
		private int _IdLMA;
		
		private EntitySet<CT_DT_MA> _CT_DT_MAs;
		
		private EntitySet<CT_MA_CBMA> _CT_MA_CBMAs;
		
		private EntitySet<CT_PHATSINH> _CT_PHATSINHs;
		
		private EntityRef<LOAIMONAN> _LOAIMONAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMAChanging(int value);
    partial void OnIdMAChanged();
    partial void OnTenMAChanging(string value);
    partial void OnTenMAChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnDonGiaChanging(decimal value);
    partial void OnDonGiaChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnIdLMAChanging(int value);
    partial void OnIdLMAChanged();
    #endregion
		
		public MONAN()
		{
			this._CT_DT_MAs = new EntitySet<CT_DT_MA>(new Action<CT_DT_MA>(this.attach_CT_DT_MAs), new Action<CT_DT_MA>(this.detach_CT_DT_MAs));
			this._CT_MA_CBMAs = new EntitySet<CT_MA_CBMA>(new Action<CT_MA_CBMA>(this.attach_CT_MA_CBMAs), new Action<CT_MA_CBMA>(this.detach_CT_MA_CBMAs));
			this._CT_PHATSINHs = new EntitySet<CT_PHATSINH>(new Action<CT_PHATSINH>(this.attach_CT_PHATSINHs), new Action<CT_PHATSINH>(this.detach_CT_PHATSINHs));
			this._LOAIMONAN = default(EntityRef<LOAIMONAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdMA
		{
			get
			{
				return this._IdMA;
			}
			set
			{
				if ((this._IdMA != value))
				{
					this.OnIdMAChanging(value);
					this.SendPropertyChanging();
					this._IdMA = value;
					this.SendPropertyChanged("IdMA");
					this.OnIdMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMA", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TenMA
		{
			get
			{
				return this._TenMA;
			}
			set
			{
				if ((this._TenMA != value))
				{
					this.OnTenMAChanging(value);
					this.SendPropertyChanging();
					this._TenMA = value;
					this.SendPropertyChanged("TenMA");
					this.OnTenMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Money NOT NULL")]
		public decimal DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLMA", DbType="Int NOT NULL")]
		public int IdLMA
		{
			get
			{
				return this._IdLMA;
			}
			set
			{
				if ((this._IdLMA != value))
				{
					if (this._LOAIMONAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLMAChanging(value);
					this.SendPropertyChanging();
					this._IdLMA = value;
					this.SendPropertyChanged("IdLMA");
					this.OnIdLMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONAN_CT_DT_MA", Storage="_CT_DT_MAs", ThisKey="IdMA", OtherKey="IdMA")]
		public EntitySet<CT_DT_MA> CT_DT_MAs
		{
			get
			{
				return this._CT_DT_MAs;
			}
			set
			{
				this._CT_DT_MAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONAN_CT_MA_CBMA", Storage="_CT_MA_CBMAs", ThisKey="IdMA", OtherKey="IdMA")]
		public EntitySet<CT_MA_CBMA> CT_MA_CBMAs
		{
			get
			{
				return this._CT_MA_CBMAs;
			}
			set
			{
				this._CT_MA_CBMAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONAN_CT_PHATSINH", Storage="_CT_PHATSINHs", ThisKey="IdMA", OtherKey="IdMA")]
		public EntitySet<CT_PHATSINH> CT_PHATSINHs
		{
			get
			{
				return this._CT_PHATSINHs;
			}
			set
			{
				this._CT_PHATSINHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIMONAN_MONAN", Storage="_LOAIMONAN", ThisKey="IdLMA", OtherKey="IdLMA", IsForeignKey=true)]
		public LOAIMONAN LOAIMONAN
		{
			get
			{
				return this._LOAIMONAN.Entity;
			}
			set
			{
				LOAIMONAN previousValue = this._LOAIMONAN.Entity;
				if (((previousValue != value) 
							|| (this._LOAIMONAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIMONAN.Entity = null;
						previousValue.MONANs.Remove(this);
					}
					this._LOAIMONAN.Entity = value;
					if ((value != null))
					{
						value.MONANs.Add(this);
						this._IdLMA = value.IdLMA;
					}
					else
					{
						this._IdLMA = default(int);
					}
					this.SendPropertyChanged("LOAIMONAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DT_MAs(CT_DT_MA entity)
		{
			this.SendPropertyChanging();
			entity.MONAN = this;
		}
		
		private void detach_CT_DT_MAs(CT_DT_MA entity)
		{
			this.SendPropertyChanging();
			entity.MONAN = null;
		}
		
		private void attach_CT_MA_CBMAs(CT_MA_CBMA entity)
		{
			this.SendPropertyChanging();
			entity.MONAN = this;
		}
		
		private void detach_CT_MA_CBMAs(CT_MA_CBMA entity)
		{
			this.SendPropertyChanging();
			entity.MONAN = null;
		}
		
		private void attach_CT_PHATSINHs(CT_PHATSINH entity)
		{
			this.SendPropertyChanging();
			entity.MONAN = this;
		}
		
		private void detach_CT_PHATSINHs(CT_PHATSINH entity)
		{
			this.SendPropertyChanging();
			entity.MONAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGUOIDUNG")]
	public partial class NGUOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private bool _HoatDong;
		
		private int _IdNV;
		
		private EntitySet<CT_ND_NND> _CT_ND_NNDs;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnHoatDongChanging(bool value);
    partial void OnHoatDongChanged();
    partial void OnIdNVChanging(int value);
    partial void OnIdNVChanged();
    #endregion
		
		public NGUOIDUNG()
		{
			this._CT_ND_NNDs = new EntitySet<CT_ND_NND>(new Action<CT_ND_NND>(this.attach_CT_ND_NNDs), new Action<CT_ND_NND>(this.detach_CT_ND_NNDs));
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoatDong", DbType="Bit NOT NULL")]
		public bool HoatDong
		{
			get
			{
				return this._HoatDong;
			}
			set
			{
				if ((this._HoatDong != value))
				{
					this.OnHoatDongChanging(value);
					this.SendPropertyChanging();
					this._HoatDong = value;
					this.SendPropertyChanged("HoatDong");
					this.OnHoatDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNV", DbType="Int NOT NULL")]
		public int IdNV
		{
			get
			{
				return this._IdNV;
			}
			set
			{
				if ((this._IdNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNVChanging(value);
					this.SendPropertyChanging();
					this._IdNV = value;
					this.SendPropertyChanged("IdNV");
					this.OnIdNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_CT_ND_NND", Storage="_CT_ND_NNDs", ThisKey="TenDangNhap", OtherKey="TenDangNhap")]
		public EntitySet<CT_ND_NND> CT_ND_NNDs
		{
			get
			{
				return this._CT_ND_NNDs;
			}
			set
			{
				this._CT_ND_NNDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_NGUOIDUNG", Storage="_NHANVIEN", ThisKey="IdNV", OtherKey="IdNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.NGUOIDUNGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.NGUOIDUNGs.Add(this);
						this._IdNV = value.IdNV;
					}
					else
					{
						this._IdNV = default(int);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_ND_NNDs(CT_ND_NND entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = this;
		}
		
		private void detach_CT_ND_NNDs(CT_ND_NND entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdNV;
		
		private string _HoTenNV;
		
		private System.DateTime _NgaySinhNV;
		
		private bool _GioiTinhNV;
		
		private string _DiaChiNV;
		
		private string _DienThoaiNV;
		
		private string _GhiChuNV;
		
		private System.Nullable<int> _IdBP;
		
		private EntitySet<CT_DT_NV> _CT_DT_NVs;
		
		private EntitySet<NGUOIDUNG> _NGUOIDUNGs;
		
		private EntityRef<BOPHAN> _BOPHAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNVChanging(int value);
    partial void OnIdNVChanged();
    partial void OnHoTenNVChanging(string value);
    partial void OnHoTenNVChanged();
    partial void OnNgaySinhNVChanging(System.DateTime value);
    partial void OnNgaySinhNVChanged();
    partial void OnGioiTinhNVChanging(bool value);
    partial void OnGioiTinhNVChanged();
    partial void OnDiaChiNVChanging(string value);
    partial void OnDiaChiNVChanged();
    partial void OnDienThoaiNVChanging(string value);
    partial void OnDienThoaiNVChanged();
    partial void OnGhiChuNVChanging(string value);
    partial void OnGhiChuNVChanged();
    partial void OnIdBPChanging(System.Nullable<int> value);
    partial void OnIdBPChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._CT_DT_NVs = new EntitySet<CT_DT_NV>(new Action<CT_DT_NV>(this.attach_CT_DT_NVs), new Action<CT_DT_NV>(this.detach_CT_DT_NVs));
			this._NGUOIDUNGs = new EntitySet<NGUOIDUNG>(new Action<NGUOIDUNG>(this.attach_NGUOIDUNGs), new Action<NGUOIDUNG>(this.detach_NGUOIDUNGs));
			this._BOPHAN = default(EntityRef<BOPHAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdNV
		{
			get
			{
				return this._IdNV;
			}
			set
			{
				if ((this._IdNV != value))
				{
					this.OnIdNVChanging(value);
					this.SendPropertyChanging();
					this._IdNV = value;
					this.SendPropertyChanged("IdNV");
					this.OnIdNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenNV", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTenNV
		{
			get
			{
				return this._HoTenNV;
			}
			set
			{
				if ((this._HoTenNV != value))
				{
					this.OnHoTenNVChanging(value);
					this.SendPropertyChanging();
					this._HoTenNV = value;
					this.SendPropertyChanged("HoTenNV");
					this.OnHoTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinhNV", DbType="Date NOT NULL")]
		public System.DateTime NgaySinhNV
		{
			get
			{
				return this._NgaySinhNV;
			}
			set
			{
				if ((this._NgaySinhNV != value))
				{
					this.OnNgaySinhNVChanging(value);
					this.SendPropertyChanging();
					this._NgaySinhNV = value;
					this.SendPropertyChanged("NgaySinhNV");
					this.OnNgaySinhNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinhNV", DbType="Bit NOT NULL")]
		public bool GioiTinhNV
		{
			get
			{
				return this._GioiTinhNV;
			}
			set
			{
				if ((this._GioiTinhNV != value))
				{
					this.OnGioiTinhNVChanging(value);
					this.SendPropertyChanging();
					this._GioiTinhNV = value;
					this.SendPropertyChanged("GioiTinhNV");
					this.OnGioiTinhNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiNV", DbType="VarChar(500)")]
		public string DiaChiNV
		{
			get
			{
				return this._DiaChiNV;
			}
			set
			{
				if ((this._DiaChiNV != value))
				{
					this.OnDiaChiNVChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNV = value;
					this.SendPropertyChanged("DiaChiNV");
					this.OnDiaChiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoaiNV", DbType="Char(10)")]
		public string DienThoaiNV
		{
			get
			{
				return this._DienThoaiNV;
			}
			set
			{
				if ((this._DienThoaiNV != value))
				{
					this.OnDienThoaiNVChanging(value);
					this.SendPropertyChanging();
					this._DienThoaiNV = value;
					this.SendPropertyChanged("DienThoaiNV");
					this.OnDienThoaiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChuNV", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GhiChuNV
		{
			get
			{
				return this._GhiChuNV;
			}
			set
			{
				if ((this._GhiChuNV != value))
				{
					this.OnGhiChuNVChanging(value);
					this.SendPropertyChanging();
					this._GhiChuNV = value;
					this.SendPropertyChanged("GhiChuNV");
					this.OnGhiChuNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBP", DbType="Int")]
		public System.Nullable<int> IdBP
		{
			get
			{
				return this._IdBP;
			}
			set
			{
				if ((this._IdBP != value))
				{
					if (this._BOPHAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBPChanging(value);
					this.SendPropertyChanging();
					this._IdBP = value;
					this.SendPropertyChanged("IdBP");
					this.OnIdBPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CT_DT_NV", Storage="_CT_DT_NVs", ThisKey="IdNV", OtherKey="IdNV")]
		public EntitySet<CT_DT_NV> CT_DT_NVs
		{
			get
			{
				return this._CT_DT_NVs;
			}
			set
			{
				this._CT_DT_NVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_NGUOIDUNG", Storage="_NGUOIDUNGs", ThisKey="IdNV", OtherKey="IdNV")]
		public EntitySet<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this._NGUOIDUNGs;
			}
			set
			{
				this._NGUOIDUNGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BOPHAN_NHANVIEN", Storage="_BOPHAN", ThisKey="IdBP", OtherKey="IdBP", IsForeignKey=true)]
		public BOPHAN BOPHAN
		{
			get
			{
				return this._BOPHAN.Entity;
			}
			set
			{
				BOPHAN previousValue = this._BOPHAN.Entity;
				if (((previousValue != value) 
							|| (this._BOPHAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BOPHAN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._BOPHAN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._IdBP = value.IdBP;
					}
					else
					{
						this._IdBP = default(Nullable<int>);
					}
					this.SendPropertyChanged("BOPHAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DT_NVs(CT_DT_NV entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_CT_DT_NVs(CT_DT_NV entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHOMNGUOIDUNG")]
	public partial class NHOMNGUOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdNND;
		
		private string _TenNND;
		
		private EntitySet<CT_ND_NND> _CT_ND_NNDs;
		
		private EntitySet<PHANQUYEN> _PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNNDChanging(int value);
    partial void OnIdNNDChanged();
    partial void OnTenNNDChanging(string value);
    partial void OnTenNNDChanged();
    #endregion
		
		public NHOMNGUOIDUNG()
		{
			this._CT_ND_NNDs = new EntitySet<CT_ND_NND>(new Action<CT_ND_NND>(this.attach_CT_ND_NNDs), new Action<CT_ND_NND>(this.detach_CT_ND_NNDs));
			this._PHANQUYENs = new EntitySet<PHANQUYEN>(new Action<PHANQUYEN>(this.attach_PHANQUYENs), new Action<PHANQUYEN>(this.detach_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNND", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdNND
		{
			get
			{
				return this._IdNND;
			}
			set
			{
				if ((this._IdNND != value))
				{
					this.OnIdNNDChanging(value);
					this.SendPropertyChanging();
					this._IdNND = value;
					this.SendPropertyChanged("IdNND");
					this.OnIdNNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNND", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string TenNND
		{
			get
			{
				return this._TenNND;
			}
			set
			{
				if ((this._TenNND != value))
				{
					this.OnTenNNDChanging(value);
					this.SendPropertyChanging();
					this._TenNND = value;
					this.SendPropertyChanged("TenNND");
					this.OnTenNNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMNGUOIDUNG_CT_ND_NND", Storage="_CT_ND_NNDs", ThisKey="IdNND", OtherKey="IdNND")]
		public EntitySet<CT_ND_NND> CT_ND_NNDs
		{
			get
			{
				return this._CT_ND_NNDs;
			}
			set
			{
				this._CT_ND_NNDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMNGUOIDUNG_PHANQUYEN", Storage="_PHANQUYENs", ThisKey="IdNND", OtherKey="IdNND")]
		public EntitySet<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this._PHANQUYENs;
			}
			set
			{
				this._PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_ND_NNDs(CT_ND_NND entity)
		{
			this.SendPropertyChanging();
			entity.NHOMNGUOIDUNG = this;
		}
		
		private void detach_CT_ND_NNDs(CT_ND_NND entity)
		{
			this.SendPropertyChanging();
			entity.NHOMNGUOIDUNG = null;
		}
		
		private void attach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.NHOMNGUOIDUNG = this;
		}
		
		private void detach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.NHOMNGUOIDUNG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANQUYEN")]
	public partial class PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdNND;
		
		private int _IdMH;
		
		private bool _CoQuyen;
		
		private EntityRef<MANHINH> _MANHINH;
		
		private EntityRef<NHOMNGUOIDUNG> _NHOMNGUOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNNDChanging(int value);
    partial void OnIdNNDChanged();
    partial void OnIdMHChanging(int value);
    partial void OnIdMHChanged();
    partial void OnCoQuyenChanging(bool value);
    partial void OnCoQuyenChanged();
    #endregion
		
		public PHANQUYEN()
		{
			this._MANHINH = default(EntityRef<MANHINH>);
			this._NHOMNGUOIDUNG = default(EntityRef<NHOMNGUOIDUNG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNND", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdNND
		{
			get
			{
				return this._IdNND;
			}
			set
			{
				if ((this._IdNND != value))
				{
					if (this._NHOMNGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNNDChanging(value);
					this.SendPropertyChanging();
					this._IdNND = value;
					this.SendPropertyChanged("IdNND");
					this.OnIdNNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdMH
		{
			get
			{
				return this._IdMH;
			}
			set
			{
				if ((this._IdMH != value))
				{
					if (this._MANHINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMHChanging(value);
					this.SendPropertyChanging();
					this._IdMH = value;
					this.SendPropertyChanged("IdMH");
					this.OnIdMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoQuyen", DbType="Bit NOT NULL")]
		public bool CoQuyen
		{
			get
			{
				return this._CoQuyen;
			}
			set
			{
				if ((this._CoQuyen != value))
				{
					this.OnCoQuyenChanging(value);
					this.SendPropertyChanging();
					this._CoQuyen = value;
					this.SendPropertyChanged("CoQuyen");
					this.OnCoQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANHINH_PHANQUYEN", Storage="_MANHINH", ThisKey="IdMH", OtherKey="IdMH", IsForeignKey=true)]
		public MANHINH MANHINH
		{
			get
			{
				return this._MANHINH.Entity;
			}
			set
			{
				MANHINH previousValue = this._MANHINH.Entity;
				if (((previousValue != value) 
							|| (this._MANHINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANHINH.Entity = null;
						previousValue.PHANQUYENs.Remove(this);
					}
					this._MANHINH.Entity = value;
					if ((value != null))
					{
						value.PHANQUYENs.Add(this);
						this._IdMH = value.IdMH;
					}
					else
					{
						this._IdMH = default(int);
					}
					this.SendPropertyChanged("MANHINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMNGUOIDUNG_PHANQUYEN", Storage="_NHOMNGUOIDUNG", ThisKey="IdNND", OtherKey="IdNND", IsForeignKey=true)]
		public NHOMNGUOIDUNG NHOMNGUOIDUNG
		{
			get
			{
				return this._NHOMNGUOIDUNG.Entity;
			}
			set
			{
				NHOMNGUOIDUNG previousValue = this._NHOMNGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NHOMNGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHOMNGUOIDUNG.Entity = null;
						previousValue.PHANQUYENs.Remove(this);
					}
					this._NHOMNGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.PHANQUYENs.Add(this);
						this._IdNND = value.IdNND;
					}
					else
					{
						this._IdNND = default(int);
					}
					this.SendPropertyChanged("NHOMNGUOIDUNG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANHTIEC")]
	public partial class SANHTIEC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdST;
		
		private string _TenST;
		
		private short _Tang;
		
		private short _SoBan;
		
		private decimal _DonGiaBan;
		
		private System.Nullable<decimal> _GiaBanTiec_PS;
		
		private string _GhiChu;
		
		private EntitySet<CT_DT_ST> _CT_DT_STs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSTChanging(int value);
    partial void OnIdSTChanged();
    partial void OnTenSTChanging(string value);
    partial void OnTenSTChanged();
    partial void OnTangChanging(short value);
    partial void OnTangChanged();
    partial void OnSoBanChanging(short value);
    partial void OnSoBanChanged();
    partial void OnDonGiaBanChanging(decimal value);
    partial void OnDonGiaBanChanged();
    partial void OnGiaBanTiec_PSChanging(System.Nullable<decimal> value);
    partial void OnGiaBanTiec_PSChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public SANHTIEC()
		{
			this._CT_DT_STs = new EntitySet<CT_DT_ST>(new Action<CT_DT_ST>(this.attach_CT_DT_STs), new Action<CT_DT_ST>(this.detach_CT_DT_STs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdST", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdST
		{
			get
			{
				return this._IdST;
			}
			set
			{
				if ((this._IdST != value))
				{
					this.OnIdSTChanging(value);
					this.SendPropertyChanging();
					this._IdST = value;
					this.SendPropertyChanged("IdST");
					this.OnIdSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenST", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenST
		{
			get
			{
				return this._TenST;
			}
			set
			{
				if ((this._TenST != value))
				{
					this.OnTenSTChanging(value);
					this.SendPropertyChanging();
					this._TenST = value;
					this.SendPropertyChanged("TenST");
					this.OnTenSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tang", DbType="SmallInt NOT NULL")]
		public short Tang
		{
			get
			{
				return this._Tang;
			}
			set
			{
				if ((this._Tang != value))
				{
					this.OnTangChanging(value);
					this.SendPropertyChanging();
					this._Tang = value;
					this.SendPropertyChanged("Tang");
					this.OnTangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoBan", DbType="SmallInt NOT NULL")]
		public short SoBan
		{
			get
			{
				return this._SoBan;
			}
			set
			{
				if ((this._SoBan != value))
				{
					this.OnSoBanChanging(value);
					this.SendPropertyChanging();
					this._SoBan = value;
					this.SendPropertyChanged("SoBan");
					this.OnSoBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGiaBan", DbType="Money NOT NULL")]
		public decimal DonGiaBan
		{
			get
			{
				return this._DonGiaBan;
			}
			set
			{
				if ((this._DonGiaBan != value))
				{
					this.OnDonGiaBanChanging(value);
					this.SendPropertyChanging();
					this._DonGiaBan = value;
					this.SendPropertyChanged("DonGiaBan");
					this.OnDonGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBanTiec_PS", DbType="Money")]
		public System.Nullable<decimal> GiaBanTiec_PS
		{
			get
			{
				return this._GiaBanTiec_PS;
			}
			set
			{
				if ((this._GiaBanTiec_PS != value))
				{
					this.OnGiaBanTiec_PSChanging(value);
					this.SendPropertyChanging();
					this._GiaBanTiec_PS = value;
					this.SendPropertyChanged("GiaBanTiec_PS");
					this.OnGiaBanTiec_PSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANHTIEC_CT_DT_ST", Storage="_CT_DT_STs", ThisKey="IdST", OtherKey="IdST")]
		public EntitySet<CT_DT_ST> CT_DT_STs
		{
			get
			{
				return this._CT_DT_STs;
			}
			set
			{
				this._CT_DT_STs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DT_STs(CT_DT_ST entity)
		{
			this.SendPropertyChanging();
			entity.SANHTIEC = this;
		}
		
		private void detach_CT_DT_STs(CT_DT_ST entity)
		{
			this.SendPropertyChanging();
			entity.SANHTIEC = null;
		}
	}
}
#pragma warning restore 1591
